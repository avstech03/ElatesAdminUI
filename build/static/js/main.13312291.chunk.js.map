{"version":3,"sources":["APICalls/utils.js","reportWebVitals.js","ReduxStore/Actions.js","ReduxStore/Reducers.js","APICalls/userApi.js","APICalls/authApis.js","APICalls/productApi.js","APICalls/categoryApis.js","APICalls/uploadFile.js","APICalls/offerApis.js","APICalls/seeddataApis.js","APICalls/couponApis.js","APICalls/orderApis.js","APICalls/index.js","Components/Login.js","Components/Header.js","Components/AddNewProduct.js","Components/EditProduct.js","Components/Products.js","Components/AddCategory.js","Components/EditCategory.js","Components/Category.js","Components/EditOrder.js","Components/Order.js","Components/AddOffer.js","Components/EditOffer.js","Components/Offers.js","Components/EditUser.js","Components/Users.js","Components/SeedData.js","Components/AddCoupon.js","Components/EditCoupon.js","Components/Coupon.js","Components/HomeScreenTemplate.js","Components/AdvanceHomeScreenTemplate.js","Components/Home.js","App.js","index.js"],"names":["apiConfig","require","config","module","exports","constructURI","code","queryString","params","uri","baseuri","qs","Object","keys","map","key","join","getQueryString","forEach","replace","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","LOGIN","CHANGE_TAB","SET_PRODUCTS","TOGGLE_ADD_PRODUCT_MODAL","ADD_NEW_PRODUCT","TOGGLE_EDIT_PRODUCT_MODAL","UPDATE_PRODUCT","FILTER_PRODUCTS","TOGGLE_DELETE_PRODUCT_MODAL","DELETE_PRODUCT","GET_ALL_CATEGORIES","TOGGLE_ADD_CATEGORY_MODAL","ADD_CATEGORY","TOGGLE_DELETE_CATEGORY_MODAL","TOGGLE_EDIT_CATEGORY_MODAL","UPDATE_CATEGORY","TOGGLE_EDIT_ORDER_MODAL","TOGGLE_ADD_OFFER_MODAL","TOGGLE_EDIT_OFFER_MODAL","SET_ORDERS","EDIT_ORDER","TOGGLE_EDIT_USER_MODAL","SET_COUPONS","EDIT_COUPON","DELETE_COUPON","ADD_COUPON","TOGGLE_ADD_COUPON","TOGGLE_EDIT_COUPON","toggleAddCouponModal","type","toggleEditCouponModal","loginAction","data","changeTab","tab","toggleAddProductModal","toggleEditProductModal","toggleDeleteProductModal","getAllCategories","categories","toggleAddCategoryModal","toggleAddOfferModal","toggleEditOfferModal","toggleEditOrderModal","toggleEditCategoryModal","category","toggleEditUser","_","initialUserState","users","initialProductsState","products","filteredProducts","initialCategoriesState","initialCouponsState","coupons","initialAuthState","token","userId","username","initialOrdersState","orders","initialTogglerState","addProductModal","editProductModal","deleteProductModal","addCategoryModal","deleteCategoryModal","editCategoryModal","editOrderModal","addOfferModal","editOfferModal","editUserModal","addCouponModal","editCouponModal","combineReducers","state","action","value","push","i","length","_id","product","filter","name","brand","remove","productId","auth","toggler","order","utils","userApi","axios","addNewAdminUser","a","url","addNewAdmin","method","headers","authorization","response","console","log","getUsers","queryParams","getusers","addToWallet","endUserId","amount","walletAmount","addtowallet","authApi","login","productApi","getAllProducts","getallproducts","addNewProduct","body","addnewproduct","getProduct","getproduct","updateProduct","updateproduct","deleteProduct","deleteproduct","fetchProductNames","productIds","getproductnames","fetchProductByName","productName","getproductbyname","categoryApi","getallcategories","addCategory","addcategory","updateCategory","categoryId","updatecategory","uploadApi","uploadFile","upload","offerApi","getOffers","getoffers","addOffer","addoffer","editOffer","offerId","editoffer","deleteOffer","deleteoffer","seedDataApi","getSeedData","getseeddata","editSeedData","editseeddata","getHomeScreenTemplate","gethomescreentemplate","editHomeScreenTemplate","edithomescreentemplate","couponApi","addCoupon","addcoupon","getCoupons","getcoupons","editCoupon","couponId","editcoupon","deleteCoupon","deletecoupon","orderApi","getOrders","editOrder","orderId","editorder","authApis","apis","Login","props","authInfo","useSelector","history","useHistory","dispatch","useDispatch","useEffect","Cookies","get","user","useState","setUsername","password","setPassword","isLogginFailed","setIsLoginFailed","failureMessage","setFailureMessage","className","id","placeholder","onChange","event","target","onClick","document","getElementById","status","set","JSON","stringify","expires","err","Fragment","Header","productApis","uploadApis","AddNewProduct","setName","setBrand","setCategory","description","setDescription","pic","setPic","quantities","setQuantities","mrp","setMrp","sellingPrice","setSellingPrice","membershipPrice","setMemberShipPrice","quantity","setQuantity","availableQuantity","setAvailableQuantity","units","setUnits","showCategories","setShowCategories","maxQuantity","setMaxQuantity","isFileLoaded","setIsFileLoaded","fileName","setFileName","getCategoryId","cat","onCategoryClick","onSubmit","json","style","pointerEvents","opacity","onFocus","cate","for","class","preventDefault","FormData","append","files","Location","obj","disabled","_quantities","cloneDeep","delQuantity","EditProduct","deleteToggleOpen","setMembershipPrice","isMultipleDeliveryAvailable","setIsMultipleDeliveryAvailable","setId","getCategoryName","onClickDeleteYes","clone","Promise","categoryApis","Products","loader","setLoader","setProductId","isFiltered","setIsFiltered","getProductsP","setProducts","getCategoriesP","tap","allProducts","addProductModalOpen","editProductModalOpen","onFilterClick","filterProducts","onClickProduct","src","AddCategory","isMainCategory","setIsMainCategory","checked","Category","EditCategory","onClickCategory","moment","orderApis","EditOrder","cart","productsToBeDelivered","setStatus","slot","setSlot","productNameMapper","setProductNameMapper","setProductName","qty","setQty","count","setCount","setProduct","inCorrectName","setInCorrectName","showQty","setShowQty","showStatus","setShowStatus","validStatuses","setValidStatuses","onClickStatus","onQuantityClick","onSave","sts","userInfo","phoneNumber","email","paymentMode","time","format","deliveryType","e","deliveryAddress","HnoStreet","cs","pincode","landmark","frequency","from","to","nextDeliveryOn","deliveryDate","Orders","seletedOrder","setSelectedOrder","setFilter","showType","setShowType","editOrderModalOpen","fetchOrders","res","setOrders","onClickOrder","toUpperCase","max","offerApis","AddOffer","isExpired","setIsExpired","offerValue","setOfferValue","onClickCancel","EditOffer","offer","Offers","offers","setOffers","setOffer","onClickOffer","userApis","EditUser","money","setMoney","address","referalCode","Users","setUsers","membership","showMembership","setShowMembership","seletedUser","setSelectedUser","fetchUsers","onClickUser","membershipObtained","mem","SeedData","seeddataApis","setParseFailed","setMembership","FAQ","setFAQ","validpincodes","setValidPinCodes","minimumcartvaluetouse","setMinimumcartvaluetouse","deliveryCharges","setDeliveryCharges","setPinCode","termsandconditions","setTermsAndConditions","aboutus","setAboutUs","privacypolicy","setPrivacyPolicy","fetchSeedData","undefined","parse","window","alert","pincodes","find","cod","addPinCode","Array","isArray","validpincode","index","deletePinCode","onCodChanged","couponApis","AddCoupon","setCode","priceMoreThan","setProceMoreThan","maximumDiscount","setMaximumDiscount","discountPercent","setDiscountPercent","restrictions","coupon","onDelete","Coupons","selectedCoupon","setSelectedCoupon","fetchCoupons","EditCoupon","onClickCoupon","HomeScreenTemplate","homeScreenTemplateApis","template","setTemplate","fetchHomeScreenTemplate","temp","AdvanceHomeScreenTemplate","Tab","Coupon","Order","homescreenTemplate","advance","enable","Home","HomeHOC","createBrowserHistory","App","baseline","path","render","store","createStore","reducer","applyMiddleware","thunk","ReactDOM"],"mappings":"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","file":"static/js/main.13312291.chunk.js","sourcesContent":["const apiConfig = require(\"../config/api.json\");\nconst config = require(\"../config/config.json\");\n\nconst getQueryString = queryString => {\n    if(!queryString) return \"\";\n    return Object.keys(queryString).map(key => `${key}=${queryString[key]}`).join(\"&\");\n};\n\nconst constructURI = (code, queryString, params) => {\n    let uri = `${config.baseuri}${apiConfig[code].uri}`;\n    const qs = getQueryString(queryString);\n    if(qs) uri = `${uri}?${qs}`; \n    if(params) {\n        Object.keys(params).forEach(key => {\n            uri = uri.replace(`:${key}`, params[key]);\n        });\n    }\n    return uri;\n};\n\nmodule.exports = {\n    constructURI,\n};  ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const LOGIN = \"LOGIN\";\nexport const CHANGE_TAB = \"CHANGE_TAB\";\nexport const SET_PRODUCTS = \"SET_PRODUCTS\";\nexport const TOGGLE_ADD_PRODUCT_MODAL = \"TOGGLE_ADD_PRODUCT_MODAL\";\nexport const ADD_NEW_PRODUCT = \"ADD_NEW_PRODUCT\";\nexport const TOGGLE_EDIT_PRODUCT_MODAL = \"TOGGLE_EDIT_PRODUCT_MODAL\";\nexport const UPDATE_PRODUCT = \"UPDATE_PRODUCT\";\nexport const FILTER_PRODUCTS = \"FILTER_PRODUCTS\";\nexport const TOGGLE_DELETE_PRODUCT_MODAL = \"TOGGLE_DELETE_PRODUCT_MODAL\";\nexport const DELETE_PRODUCT = \"DELETE_PRODUCT\";\nexport const GET_ALL_CATEGORIES = \"GET_ALL_CATEGORIES\";\nexport const TOGGLE_ADD_CATEGORY_MODAL = \"TOGGLE_ADD_CATEGORY_MODAL\";\nexport const ADD_CATEGORY = \"ADD_CATEGORY\";\nexport const TOGGLE_DELETE_CATEGORY_MODAL = \"TOGGLE_DELETE_CATEGORY_MODAL\";\nexport const TOGGLE_EDIT_CATEGORY_MODAL = \"TOGGLE_EDIT_CATEGORY_MODAL\";\nexport const UPDATE_CATEGORY = \"UPDATE_CATEGORY\";\nexport const TOGGLE_EDIT_ORDER_MODAL = \"TOGGLE_EDIT_ORDER_MODAL\";\nexport const TOGGLE_ADD_OFFER_MODAL = \"TOGGLE_ADD_OFFER_MODAL\";\nexport const TOGGLE_EDIT_OFFER_MODAL = \"TOGGLE_EDIT_OFFER_MODAL\";\nexport const SET_ORDERS = \"GET_ORDERS\";\nexport const EDIT_ORDER = \"EDIT_ORDER\";\nexport const TOGGLE_EDIT_USER_MODAL = \"TOGGLE_EDIT_USER_MODAL\";\nexport const SET_COUPONS = \"SET_COUPONS\";\nexport const EDIT_COUPON = \"EDIT_COUPON\";\nexport const DELETE_COUPON = \"DELETE_COUPON\";\nexport const ADD_COUPON = \"ADD_COUPON\";\nexport const TOGGLE_ADD_COUPON = \"TOGGLE_ADD_COUPON\";\nexport const TOGGLE_EDIT_COUPON = \"TOGGLE_EDIT_COUPON\";\n\nexport const toggleAddCouponModal = () => {\n    return {\n        type: TOGGLE_ADD_COUPON\n    };\n};\n\nexport const toggleEditCouponModal = () => {\n    return {\n        type: TOGGLE_EDIT_COUPON\n    }\n}\n\nexport const setCoupons = (data) => {\n    return {\n        type: SET_COUPONS,\n        data,\n    }\n}\n\nexport const addCoupon = (data) => {\n    return {\n        type: ADD_COUPON,\n        data,\n    }\n}\n\nexport const editCoupon = (data) => {\n    return {\n        type: EDIT_COUPON,\n        data,\n    }\n}\n\nexport const deleteCoupon = (data) => {\n    return {\n        type: DELETE_COUPON,\n        data,\n    }\n}\n\nexport const loginAction = (data) => {\n    return {\n        type: LOGIN,\n        data: data\n    };\n};\n\nexport const changeTab = (data) => {\n    return {\n        type: CHANGE_TAB,\n        tab: data\n    };\n};\n\nexport const setProducts = (products) => {\n    return {\n        type: SET_PRODUCTS,\n        products: products\n    };\n};\n\nexport const toggleAddProductModal = () => {\n    return {\n        type: TOGGLE_ADD_PRODUCT_MODAL\n    };\n};\n\nexport const addNewProduct = (product) => {\n    return {\n        type: ADD_NEW_PRODUCT,\n        product: product\n    };\n};\n\nexport const toggleEditProductModal = () => {\n    return {\n        type: TOGGLE_EDIT_PRODUCT_MODAL\n    };\n};\n\nexport const updateProduct = (productId, product) => {\n    return {\n        type: UPDATE_PRODUCT,\n        productId,\n        product,\n    };\n};\n\nexport const filterProducts = (name, category, brand) => {\n    return {\n        type: FILTER_PRODUCTS,\n        name,\n        category,\n        brand,\n    };\n};\n\nexport const toggleDeleteProductModal = () => {\n    return {\n        type: TOGGLE_DELETE_PRODUCT_MODAL,\n    };\n};\n\nexport const deleteProduct = (productId) => {\n    return {\n        type: DELETE_PRODUCT,\n        productId,\n    };\n};\n\nexport const getAllCategories = (categories) => {\n    return {\n        type: GET_ALL_CATEGORIES,\n        categories,\n    };\n};\n\nexport const toggleAddCategoryModal = () => {\n    return {\n        type: TOGGLE_ADD_CATEGORY_MODAL\n    };\n};\n\nexport const toggleAddOfferModal = () => {\n    return {\n        type: TOGGLE_ADD_OFFER_MODAL\n    };\n};\n\nexport const toggleEditOfferModal = () => {\n    return {\n        type: TOGGLE_EDIT_OFFER_MODAL\n    };\n}\n\nexport const toggleEditOrderModal = () => {\n    return {\n        type: TOGGLE_EDIT_ORDER_MODAL\n    };\n};\n\nexport const addCategory = (category) => {\n    return {\n        type: ADD_CATEGORY,\n        category,\n    }\n}\n\nexport const toggleDeleteCategoryModal = () => {\n    return {\n        type: TOGGLE_DELETE_CATEGORY_MODAL\n    }\n}\n\nexport const toggleEditCategoryModal = category => {\n    return {\n        type: TOGGLE_EDIT_CATEGORY_MODAL\n    }\n}\n\nexport const updateCategory = (categoryId, category) => {\n    return {\n        type: UPDATE_CATEGORY,\n        categoryId,\n        category,\n    };\n};\n\nexport const setOrders = (orders) => {\n    return {\n        type: SET_ORDERS,\n        orders\n    }\n};\n\nexport const editOrder = (order) => {\n    return {\n        type: EDIT_ORDER,\n        order\n    }\n}\n\nexport const toggleEditUser = () => {\n    return {\n        type: TOGGLE_EDIT_USER_MODAL\n    }\n}","import { combineReducers } from 'redux';\nimport {LOGIN,\n        CHANGE_TAB,\n        SET_PRODUCTS, \n        TOGGLE_ADD_PRODUCT_MODAL, \n        ADD_NEW_PRODUCT,\n        TOGGLE_EDIT_PRODUCT_MODAL,\n        UPDATE_PRODUCT,\n        FILTER_PRODUCTS,\n        TOGGLE_DELETE_PRODUCT_MODAL,\n        DELETE_PRODUCT,\n        GET_ALL_CATEGORIES,\n        TOGGLE_ADD_CATEGORY_MODAL,\n        ADD_CATEGORY,\n        TOGGLE_DELETE_CATEGORY_MODAL,\n        TOGGLE_EDIT_CATEGORY_MODAL,\n        UPDATE_CATEGORY,\n        TOGGLE_EDIT_ORDER_MODAL,\n        TOGGLE_ADD_OFFER_MODAL,\n        TOGGLE_EDIT_OFFER_MODAL,\n        SET_ORDERS,\n        EDIT_ORDER,\n        TOGGLE_EDIT_USER_MODAL,\n        SET_COUPONS,\n        ADD_COUPON,\n        EDIT_COUPON,\n        DELETE_COUPON,\n        TOGGLE_ADD_COUPON,\n        TOGGLE_EDIT_COUPON,\n    } from \"./Actions\";\nimport { createPath } from 'history';\nconst _ = require(\"lodash\");\n\nconst initialUserState = {\n    users: [],\n};\nconst initialProductsState = {\n    products: [],\n    filteredProducts: [],\n};\nconst initialCategoriesState = {\n    categories: [],\n};\n\nconst initialCouponsState = {\n    coupons: [],\n};\n\nconst initialAuthState = {\n    token: \"\",\n    userId: \"\",\n    username: \"\"\n};\nconst initialOrdersState = {\n    orders: []\n};\nconst initialTabState = {\n    value: \"\"\n};\n\nconst initialTogglerState = {\n    addProductModal: false,\n    editProductModal: false,\n    deleteProductModal: false,\n    addCategoryModal: false,\n    deleteCategoryModal: false,\n    editCategoryModal: false,\n    editOrderModal: false,\n    addOfferModal: false,\n    editOfferModal: false,\n    editUserModal: false,\n    addCouponModal: false,\n    editCouponModal: false,\n};\n\nconst UserReducer = (state = initialUserState, action) => {\n    switch(action.type) {\n        case \"ADD_NEW_ADMIN\":\n            break;\n        case \"GET_ALL_USER\":\n            break;\n        case \"GET_USER_BY_ID\":\n            break;\n        case \"REMOVE_USER\":\n            break;\n        case \"EDIT_USER\":\n            break;\n        default:\n            return state;\n    }\n};\n\nconst TabReducer = (state = null, action) => {\n    switch(action.type) {\n        case CHANGE_TAB:\n            return {\n                ...state,\n                value: action.tab\n            };\n        default:\n            return state;\n    }\n};\n\nconst AuthReducer = (state = initialAuthState, action) => {\n    switch(action.type) {\n        case LOGIN: \n            return {\n                ...state,\n                token: action.data.token,\n                userId: action.data.userId,\n                username: action.data.username\n            };\n        case \"LOGOUT\":\n            break;\n        default:\n            return state;\n    }\n};\n\nconst ProductsReducer = (state = initialProductsState, action) => {\n    let products = state.products;\n    switch(action.type) {\n        case SET_PRODUCTS:\n            return {\n                ...state,\n                products: action.products\n            };\n        case ADD_NEW_PRODUCT:\n            products.push(action.product);\n            return {\n                ...state,\n                products,\n            };\n        case UPDATE_PRODUCT:\n            for(let i = 0; i < products.length; i++) {\n                if(products[i]._id === action.product._id) {\n                    products[i] = action.product;\n                }\n            }\n            return {\n                ...state,\n                products,\n            };\n        case FILTER_PRODUCTS:\n            let filteredProducts = _.filter(state.products, product => {\n                if(action.name && action.name !== product.name) return false;\n                if(action.category && action.category !== product.category) return false;\n                if(action.brand && action.brand !== product.brand) return false;\n                return true;\n            });\n            return {\n                ...state,\n                filteredProducts\n            };\n        case DELETE_PRODUCT:\n            _.remove(products, product => {\n                return product._id === action.productId;\n            });\n            return {\n                ...state,\n                products,\n            };\n        case \"GET_PRODUCT_BY_ID\":\n            break;\n        case \"GET_ALL_PRODUCT\":\n            break;\n        case \"GET_PRODUCT_BY_NAME\":\n            break;\n        default:\n            return state;           \n    }\n};\n\nconst CategoriesReducer = (state = initialCategoriesState, action) => {\n    let categories = state.categories;\n    switch(action.type) {\n        case GET_ALL_CATEGORIES:\n            return {\n                ...state,\n                categories: action.categories\n            };\n        case ADD_CATEGORY:\n            categories.push(action.category);\n            return {\n                ...state,\n                categories,\n            }\n        case UPDATE_CATEGORY:\n            for(let i = 0; i < categories.length; i++) {\n                if(categories[i]._id === action.category._id) {\n                    categories[i] = action.category;\n                }\n            }\n            return {\n                ...state,\n                categories,\n            }\n        case \"REMOVE_CATEGORY\":\n            break;\n        case \"GET_CATEGORY_BY_ID\":\n            break;\n        case \"GET_ALL_CATEGORY\":\n            break;\n        case \"GET_CATEGORY_BY_NAME\":\n            break;\n        default:\n            return state;\n    }\n};\n\nconst OrdersReducer = (state = initialOrdersState, action) => {\n    let orders = state.orders;\n    switch(action.type) {\n        case SET_ORDERS:\n            return {\n                ...state,\n                orders: action.orders\n            }\n            break;\n        case EDIT_ORDER:\n            for(let i = 0; i < orders.length; i++) {\n                if(orders[i]._id === action.order._id) {\n                    orders[i] = action.order;\n                }\n            }\n            return {\n                ...state,\n                orders: orders\n            }\n        default:\n            return state;\n    }\n};\n\nconst CouponReducer = (state = initialCouponsState, action) => {\n    let coupons = state.coupons;\n    switch(action.type) {\n        case SET_COUPONS:\n            return {\n                ...state,\n                coupons: action.data,\n            }\n        case ADD_COUPON:\n            coupons.push(action.data);\n            return {\n                ...state,\n                coupons: coupons\n            }\n        case EDIT_COUPON:\n            for(let i = 0; i < coupons.length; i++) {\n                if(coupons[i]._id === action.data._id) coupons[i] = action.data;\n            }\n            return {\n                ...state,\n                coupons: coupons\n            }\n        case DELETE_COUPON:\n            _.remove(coupons, {_id: action.data._id});\n            return {\n                ...state,\n                coupons: coupons\n            }      \n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nconst ModalTogglerReducer = (state = initialTogglerState, action) => {\n    switch(action.type) {\n        case TOGGLE_ADD_PRODUCT_MODAL:\n            return {\n                ...state,\n                addProductModal: !state.addProductModal\n            };\n        case TOGGLE_EDIT_PRODUCT_MODAL:\n            return {\n                ...state,\n                editProductModal: !state.editProductModal\n            };\n        case TOGGLE_DELETE_PRODUCT_MODAL:\n            return {\n                ...state,\n                deleteProductModal: !state.deleteProductModal\n            }\n        case TOGGLE_ADD_CATEGORY_MODAL:\n            return {\n                ...state,\n                addCategoryModal: !state.addCategoryModal\n            }\n        case TOGGLE_DELETE_CATEGORY_MODAL:\n            return {\n                ...state,\n                deleteCategoryModal: !state.deleteCategoryModal\n            }\n        case TOGGLE_EDIT_CATEGORY_MODAL:\n            return {\n                ...state,\n                editCategoryModal: !state.editCategoryModal\n            }\n        case TOGGLE_EDIT_ORDER_MODAL:\n            return{\n                ...state,\n                editOrderModal: !state.editOrderModal\n            }\n        case TOGGLE_ADD_OFFER_MODAL:\n            return {\n                ...state,\n                addOfferModal: !state.addOfferModal\n            }\n        case TOGGLE_EDIT_OFFER_MODAL:\n            return {\n                ...state,\n                editOfferModal: !state.editOfferModal\n            }\n        case TOGGLE_EDIT_USER_MODAL:\n            return {\n                ...state,\n                editUserModal: !state.editUserModal\n            }\n        case TOGGLE_ADD_COUPON:\n            return {\n                ...state,\n                addCouponModal: !state.addCouponModal\n            }\n        case TOGGLE_EDIT_COUPON:\n            return {\n                ...state,\n                editCouponModal: !state.editCouponModal\n            }\n        default:\n            return state;\n    }\n}\n\nexport default combineReducers({\n    tab: TabReducer,\n    users: UserReducer,\n    categories: CategoriesReducer,\n    products: ProductsReducer,\n    auth: AuthReducer,\n    toggler: ModalTogglerReducer,\n    orders: OrdersReducer,\n    coupons: CouponReducer,\n});","const apiConfig = require(\"../config/api.json\");\nconst utils = require(\"./utils\");\nconst token = \"asdfafsadf\";\n\nconst userApi = (axios) => {\n  const addNewAdminUser = async (data) => {\n    let response;\n    try {\n      response = await axios({\n        url: apiConfig.addNewAdmin.uri,\n        method: apiConfig.addNewAdmin.method,\n        headers: {\n          authorization: token,\n        },\n      });\n    } catch (err) {\n      console.log(\" === ERROR === \", err);\n    }\n    return response;\n  };\n\n  const getUsers = (userId, token, queryParams) => {\n    let request = axios({\n      url: utils.constructURI(\"getusers\", queryParams, {\n        userId,\n      }),\n      method: apiConfig.getusers.method,\n      headers: {\n        authorization: token,\n      },\n    });\n    return request.then((response) => response.data);\n  };\n\n  const addToWallet = (userId, token, endUserId, amount) => {\n    let request = axios({\n      url: utils.constructURI(\n        \"addtowallet\",\n        { walletAmount: amount },\n        {\n          endUserId,\n          userId,\n        }\n      ),\n      method: apiConfig.addtowallet.method,\n      headers: {\n        authorization: token,\n      },\n    });\n    return request.then((response) => response.data);\n  };\n\n  return {\n    addNewAdminUser,\n    getUsers,\n    addToWallet,\n  };\n};\n\nexport default userApi;\n","const apiConfig = require(\"../config/api.json\");\nconst utils = require(\"./utils\");\n\nconst authApi = (axios) => {\n  const login = async (data) => {\n    let response;\n    try {\n      response = await axios({\n        url: utils.constructURI(\"login\", data),\n        method: apiConfig.login.method,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n    } catch (err) {\n      console.log(\" === ERROR === \", err.response);\n      return err.response;\n    }\n    return response;\n  };\n\n  return {\n    login,\n  };\n};\n\nexport default authApi;\n","const apiConfig = require(\"../config/api.json\");\nconst utils = require(\"./utils\");\n\nconst productApi = (axios) => {\n  const getAllProducts = async (userId, token) => {\n    let response;\n    try {\n      response = await axios({\n        url: utils.constructURI(\n          \"getallproducts\",\n          {},\n          {\n            userId,\n          }\n        ),\n        method: apiConfig.getallproducts.method,\n        headers: {\n          authorization: token,\n        },\n      });\n    } catch (err) {\n      console.log(\" === ERROR === \", err);\n    }\n    return response.data;\n  };\n\n  const addNewProduct = (userId, token, body) => {\n    let request = axios({\n      url: utils.constructURI(\n        \"addnewproduct\",\n        {},\n        {\n          userId,\n        }\n      ),\n      method: apiConfig.addnewproduct.method,\n      headers: {\n        authorization: token,\n      },\n      data: body,\n    });\n    return request.then((response) => response.data);\n  };\n\n  const getProduct = (userId, token, productId) => {\n    let request = axios({\n      url: utils.constructURI(\n        \"getproduct\",\n        {},\n        {\n          userId,\n          productId,\n        }\n      ),\n      method: apiConfig.getproduct.method,\n      headers: {\n        authorization: token,\n      },\n    });\n    return request.then((response) => response.data);\n  };\n\n  const updateProduct = (userId, token, productId, body) => {\n    let request = axios({\n      url: utils.constructURI(\n        \"updateproduct\",\n        {},\n        {\n          userId,\n          productId,\n        }\n      ),\n      method: apiConfig.updateproduct.method,\n      data: body,\n      headers: {\n        authorization: token,\n      },\n    });\n    return request.then((response) => response.data);\n  };\n\n  const deleteProduct = (userId, token, productId) => {\n    let request = axios({\n      url: utils.constructURI(\n        \"deleteproduct\",\n        {},\n        {\n          userId,\n          productId,\n        }\n      ),\n      method: apiConfig.deleteproduct.method,\n      headers: {\n        authorization: token,\n      },\n    });\n    return request.then((response) => response.data);\n  };\n\n  const fetchProductNames = (userId, token, productIds) => {\n    let request = axios({\n      url: utils.constructURI(\n        \"getproductnames\",\n        {},\n        {\n          userId,\n        }\n      ),\n      method: apiConfig.getproductnames.method,\n      headers: {\n        authorization: token,\n      },\n      data: {\n        productIds,\n      },\n    });\n    return request.then((response) => response.data);\n  };\n\n  const fetchProductByName = (userId, token, name) => {\n    let request = axios({\n      url: utils.constructURI(\n        \"getproductbyname\",\n        {},\n        {\n          userId,\n          productName: name,\n        }\n      ),\n      method: apiConfig.getproductbyname.method,\n      headers: {\n        authorization: token,\n      },\n    });\n    return request.then((response) => response.data);\n  };\n\n  return {\n    getAllProducts,\n    addNewProduct,\n    getProduct,\n    updateProduct,\n    deleteProduct,\n    fetchProductNames,\n    fetchProductByName,\n  };\n};\n\nexport default productApi;\n","const apiConfig = require(\"../config/api.json\");\nconst utils = require(\"./utils\");\n\nconst categoryApi = (axios) => {\n  const getAllCategories = (userId, token) => {\n    let request = axios({\n      url: utils.constructURI(\n        \"getallcategories\",\n        {},\n        {\n          userId,\n        }\n      ),\n      method: apiConfig.getallcategories.method,\n      headers: {\n        authorization: token,\n      },\n    });\n    return request.then((response) => response.data);\n  };\n\n  const addCategory = (userId, token, body) => {\n    let request = axios({\n      url: utils.constructURI(\n        \"addcategory\",\n        {},\n        {\n          userId,\n        }\n      ),\n      method: apiConfig.addcategory.method,\n      headers: {\n        authorization: token,\n      },\n      data: body,\n    });\n    return request.then((response) => response.data);\n  };\n\n  const updateCategory = (userId, token, categoryId, body) => {\n    let request = axios({\n      url: utils.constructURI(\n        \"updatecategory\",\n        {},\n        {\n          userId,\n          categoryId,\n        }\n      ),\n      method: apiConfig.updatecategory.method,\n      headers: {\n        authorization: token,\n      },\n      data: body,\n    });\n    return request.then((response) => response.data);\n  };\n\n  return {\n    getAllCategories,\n    addCategory,\n    updateCategory,\n  };\n};\n\nexport default categoryApi;\n","const apiConfig = require(\"../config/api.json\");\nconst utils = require(\"./utils\");\n\nconst uploadApi = (axios) => {\n  const uploadFile = (userId, token, data) => {\n    let request = axios({\n      url: utils.constructURI(\"upload\", {}, { userId }),\n      data: data,\n      method: apiConfig.upload.method,\n      headers: {\n        authorization: token,\n      },\n    });\n    return request.then((response) => response.data);\n  };\n\n  return {\n    uploadFile,\n  };\n};\n\nexport default uploadApi;\n","const apiConfig = require(\"../config/api.json\");\nconst utils = require(\"./utils\");\n\nconst offerApi = (axios) => {\n  const getOffers = (userId, token) => {\n    let request = axios({\n      url: utils.constructURI(\n        \"getoffers\",\n        {},\n        {\n          userId,\n        }\n      ),\n      method: apiConfig.getoffers.method,\n      headers: {\n        authorization: token,\n      },\n    });\n    return request.then((response) => response.data);\n  };\n\n  const addOffer = (userId, token, body) => {\n    let request = axios({\n      url: utils.constructURI(\n        \"addoffer\",\n        {},\n        {\n          userId,\n        }\n      ),\n      method: apiConfig.addoffer.method,\n      headers: {\n        authorization: token,\n      },\n      data: body,\n    });\n    return request.then((response) => response.data);\n  };\n\n  const editOffer = (userId, token, offerId, body) => {\n    let request = axios({\n      url: utils.constructURI(\n        \"editoffer\",\n        {},\n        {\n          userId,\n          offerId,\n        }\n      ),\n      method: apiConfig.editoffer.method,\n      headers: {\n        authorization: token,\n      },\n      data: body,\n    });\n    return request.then((response) => response.data);\n  };\n\n  const deleteOffer = (userId, token, offerId) => {\n    let request = axios({\n      url: utils.constructURI(\n        \"editoffer\",\n        {},\n        {\n          userId,\n          offerId,\n        }\n      ),\n      method: apiConfig.deleteoffer.method,\n      headers: {\n        authorization: token,\n      },\n    });\n    return request.then((response) => response.data);\n  };\n\n  return {\n    getOffers,\n    addOffer,\n    editOffer,\n    deleteOffer,\n  };\n};\n\nexport default offerApi;\n","const { config } = require(\"bluebird\");\nconst apiConfig = require(\"../config/api.json\");\nconst utils = require(\"./utils\");\n\nconst seedDataApi = (axios) => {\n  const getSeedData = (userId, token) => {\n    let request = axios({\n      url: utils.constructURI(\n        \"getseeddata\",\n        {},\n        {\n          userId,\n        }\n      ),\n      method: apiConfig.getseeddata.method,\n      headers: {\n        authorization: token,\n      },\n    });\n    return request.then((response) => response.data);\n  };\n\n  const editSeedData = (userId, token, body) => {\n    let request = axios({\n      url: utils.constructURI(\n        \"editseeddata\",\n        {},\n        {\n          userId,\n        }\n      ),\n      method: apiConfig.editseeddata.method,\n      headers: {\n        authorization: token,\n      },\n      data: body,\n    });\n    return request.then((response) => response.data);\n  };\n\n  const getHomeScreenTemplate = (userId, token) => {\n    let request = axios({\n      url: utils.constructURI(\n        \"gethomescreentemplate\",\n        {},\n        {\n          userId,\n        }\n      ),\n      method: apiConfig.gethomescreentemplate.method,\n      headers: {\n        authorization: token,\n      },\n    });\n    return request.then((response) => response.data);\n  };\n\n  const editHomeScreenTemplate = (userId, token, body) => {\n    let request = axios({\n      url: utils.constructURI(\n        \"edithomescreentemplate\",\n        {},\n        {\n          userId,\n        }\n      ),\n      method: apiConfig.edithomescreentemplate.method,\n      headers: {\n        authorization: token,\n      },\n      data: body,\n    });\n    return request.then((response) => response.data);\n  };\n\n  return {\n    getSeedData,\n    editSeedData,\n    getHomeScreenTemplate,\n    editHomeScreenTemplate,\n  };\n};\n\nexport default seedDataApi;\n","const apiConfig = require(\"../config/api.json\");\nconst utils = require(\"./utils\");\n\nconst couponApi = (axios) => {\n  const getCoupons = (userId, token) => {\n    let request = axios({\n      url: utils.constructURI(\n        \"getcoupons\",\n        {},\n        {\n          userId,\n        }\n      ),\n      method: apiConfig.getcoupons.method,\n      headers: {\n        authorization: token,\n      },\n    });\n    return request.then((response) => response.data);\n  };\n\n  const addCoupon = (userId, token, body) => {\n    let request = axios({\n      url: utils.constructURI(\n        \"addcoupon\",\n        {},\n        {\n          userId,\n        }\n      ),\n      method: apiConfig.addcoupon.method,\n      headers: {\n        authorization: token,\n      },\n      data: body,\n    });\n    return request.then((response) => response.data);\n  };\n\n  const editCoupon = (userId, token, body, couponId) => {\n    let request = axios({\n      url: utils.constructURI(\n        \"editcoupon\",\n        {},\n        {\n          userId,\n          couponId,\n        }\n      ),\n      method: apiConfig.editcoupon.method,\n      headers: {\n        authorization: token,\n      },\n      data: body,\n    });\n    return request.then((response) => response.data);\n  };\n\n  const deleteCoupon = (userId, token, couponId) => {\n    let request = axios({\n      url: utils.constructURI(\n        \"deletecoupon\",\n        {},\n        {\n          userId,\n          couponId,\n        }\n      ),\n      method: apiConfig.deletecoupon.method,\n      headers: {\n        authorization: token,\n      },\n    });\n    return request.then((response) => response.data);\n  };\n\n  return {\n    addCoupon,\n    getCoupons,\n    editCoupon,\n    deleteCoupon,\n  };\n};\n\nexport default couponApi;\n","const apiConfig = require(\"../config/api.json\");\nconst utils = require(\"./utils\");\n\nconst orderApi = (axios) => {\n  const getOrders = (userId, token, queryParams) => {\n    let request = axios({\n      url: utils.constructURI(\"getOrders\", queryParams, {\n        userId,\n      }),\n      method: apiConfig.getOrders.method,\n      headers: {\n        authorization: token,\n      },\n    });\n    return request.then((response) => response.data);\n  };\n\n  const editOrder = (userId, token, orderId, body) => {\n    let request = axios({\n      url: utils.constructURI(\n        \"editorder\",\n        {},\n        {\n          userId,\n          orderId,\n        }\n      ),\n      method: apiConfig.editorder.method,\n      headers: {\n        authorization: token,\n      },\n      data: body,\n    });\n    return request.then((response) => response.data);\n  };\n\n  return {\n    getOrders,\n    editOrder,\n  };\n};\n\nexport default orderApi;\n","import axios from \"axios\";\nimport userApi from \"./userApi\";\nimport authApi from \"./authApis\";\nimport productApi from \"./productApi\";\nimport categoryApi from \"./categoryApis\";\nimport uploadApi from \"./uploadFile\";\nimport offerApi from \"./offerApis\";\nimport seedDataApi from \"./seeddataApis\";\nimport couponApi from \"./couponApis\";\nimport orderApi from \"./orderApis\";\n\nexport default {\n  userApis: () => userApi(axios),\n  authApis: () => authApi(axios),\n  productApis: () => productApi(axios),\n  categoryApis: () => categoryApi(axios),\n  uploadApis: () => uploadApi(axios),\n  orderApis: () => orderApi(axios),\n  offerApis: () => offerApi(axios),\n  seedataApis: () => seedDataApi(axios),\n  couponApis: () => couponApi(axios),\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { loginAction } from '../ReduxStore/Actions';\nimport apis from \"../APICalls\";\nimport Cookies from \"js-cookie\";\n\nconst authApis = apis.authApis();\n\nconst Login = props => {\n    const authInfo = useSelector(state => state.auth);\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    if (authInfo.token) history.push(\"/home\");\n\n    useEffect(() => {\n        const token = Cookies.get(\"token\");\n        const user = Cookies.get(\"user\");\n        if(token && user) {\n            dispatch(loginAction({token, user}));\n            history.push(\"/home\");\n        }\n    }, []);\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [isLogginFailed, setIsLoginFailed] = useState(false);\n    const [failureMessage, setFailureMessage] = useState(\"\");\n\n    const changeUserName = event => {\n        setUsername(event.target.value);\n    };\n\n    const changePassword = event => {\n        setPassword(event.target.value);\n    };\n\n    const login = () => {\n        authApis.login({username, password}).then((response) => {\n            if(response) {\n                document.getElementById(\"username\").value = \"\";\n                document.getElementById(\"password\").value = \"\";\n                if(response.status === 200) {\n                    setIsLoginFailed(false);\n                    Cookies.set(\"token\", JSON.stringify(response.data.token), {expires: 1});\n                    Cookies.set(\"userId\", JSON.stringify(response.data.user._id), {expires: 1});\n                    Cookies.set(\"username\", JSON.stringify(response.data.user.username), {expires: 1});  \n                    dispatch(loginAction({userId: response.data.user._id, username: response.data.user.username, token: response.data.token}));\n                    history.push(\"/home\");\n                } else {\n                    setIsLoginFailed(true);\n                    setFailureMessage(response.data.err);\n                }\n            }\n        });\n    };\n\n    return (\n        <div>\n            <center>\n\n                <div className=\"login-card\">\n                    <div className=\"login-brand\">Elates Grocer</div>\n                    <input\n                        type=\"text\"\n                        id=\"username\"\n                        placeholder=\"username\"\n                        onChange={changeUserName}\n                        value={username}\n                        className=\"inpt login-usename-inpt\"\n                    />\n\n                    <br/>\n\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        placeholder=\"password\"\n                        onChange={changePassword}\n                        value={password}\n                        className=\"password\"\n                    />\n                    \n                    <br/>\n\n                    <button className=\"login-btn\" onClick={() => login()}>\n                        login\n                    </button>\n                    {\n                        isLogginFailed ? \n                            <p className=\"failure-message\">\n                                {failureMessage}\n                            </p>\n                        :\n                            <React.Fragment/>\n                    }\n                </div>\n            </center>\n        </div>\n    )\n};\n\nexport default Login;","import React from 'react';\nimport Cookies from 'js-cookie';\nimport {useHistory} from 'react-router-dom';\nimport {useDispatch} from 'react-redux';\nimport {loginAction, changeTab} from \"../ReduxStore/Actions\";\n\nconst Header = props => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const logout = () => {\n        Cookies.remove(\"token\");\n        Cookies.remove(\"user\");\n        dispatch(loginAction({token: \"\", user: \"\"}));\n        history.push(\"/login\");\n    }\n    return (\n        <React.Fragment>\n            <div className=\"header\">\n                <div className=\"header-brand\">Elates Grocer</div>\n                \n                <div className=\"tab\" onClick={() => dispatch(changeTab(\"products\"))}>products</div>\n                <div className=\"tab\" onClick={() => dispatch(changeTab(\"category\"))}>category</div>\n                <div className=\"tab\" onClick={() => dispatch(changeTab(\"orders\"))}>orders</div>\n                <div className=\"tab\" onClick={() => dispatch(changeTab(\"users\"))}>users</div>\n                <div className=\"tab\" onClick={() => dispatch(changeTab(\"offers\"))}>offers</div>\n                <div className=\"tab\" onClick={() => dispatch(changeTab(\"coupons\"))}>coupons</div>\n                <div className=\"tab\" onClick={() => dispatch(changeTab(\"seeddata\"))}>seeddata</div>\n                <div className=\"tab\" onClick={() => dispatch(changeTab(\"hometemplate\"))}>hometemplate</div>\n\n                <button className=\"logout-btn\" onClick={() => logout()}>logout</button>\n                <div className=\"username\">{props.username}</div>\n            </div>\n        </React.Fragment>\n    )\n};\n\nexport default Header;","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleAddProductModal } from \"../ReduxStore/Actions\";\nimport apis from \"../APICalls\";\nimport { addNewProduct } from \"../ReduxStore/Actions\";\nconst _ = require(\"lodash\");\n\nconst productApis = apis.productApis();\nconst uploadApis = apis.uploadApis();\n\nconst AddNewProduct = props => {\n    const dispatch = useDispatch();\n    const auth = useSelector(state => state.auth);\n\n    const [name, setName] = useState(\"\");\n    const [brand, setBrand] = useState(\"\");\n    const [category, setCategory] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [pic, setPic] = useState(\"\");\n    const [quantities, setQuantities] = useState([]);\n    const [mrp, setMrp] = useState(0);\n    const [sellingPrice, setSellingPrice] = useState(0);\n    const [membershipPrice, setMemberShipPrice] = useState(0);\n    const [quantity, setQuantity] = useState(\"\");\n    const [availableQuantity, setAvailableQuantity] = useState(0);\n    const [units, setUnits] = useState(\"\");\n    const [showCategories, setShowCategories] = useState(false);\n    const [maxQuantity, setMaxQuantity] = useState(5);\n    const [isFileLoaded, setIsFileLoaded] = useState(true);\n    const [fileName, setFileName] = useState(\"\");\n\n    const inputs = [\"mrp\", \"sellingprice\", \"specialprice\", \"availablequantity\", \"units\", \"quantity\"];\n    const onNameChange = event => setName(event.target.value);\n    const onBrandChange = event => setBrand(event.target.value);\n    const onCategoryChange = event => setCategory(event.target.value);\n    const onPicChange = event => setPic(event.target.value);\n    const onDescriptionChange = event => setDescription(event.target.value);\n    const onMrpChange = event => setMrp(event.target.value);\n    const onMaxQuantityChange = event => setMaxQuantity(event.target.value);\n    const onChangePic = event => {\n        setIsFileLoaded(false);\n        event.preventDefault();\n        let data = new FormData();\n        setFileName(event.target.value);\n        data.append(\"image\", event.target.files[0]);\n        uploadApis.uploadFile(auth.userId, auth.token, data)\n            .then(response => {\n                if (response) {\n                    setIsFileLoaded(true);\n                    setPic(response.Location);\n                }\n            })\n    }\n\n    const onSellingPriceChange = event => setSellingPrice(event.target.value)\n    const onMembershipPriceChange = event => setMemberShipPrice(event.target.value);\n    const onUnitsChange = event => setUnits(event.target.value);\n    const onQuantityChange = event => setQuantity(event.target.value);\n    const onChangeAvailableQuantity = event => setAvailableQuantity(event.target.value);\n\n    let categories = useSelector(state => state.categories.categories);\n\n    const getCategoryId = (name) => {\n        let id = \"\";\n        categories.forEach(cat => {\n            if (cat.name === name) {\n                id = cat._id;\n            }\n        });\n        return id;\n    };\n\n    const addQuantity = () => {\n        setUnits(\"\");\n        setAvailableQuantity(0);\n        setMrp(0);\n        setSellingPrice(0);\n        setQuantity(0);\n        setMemberShipPrice(0);\n        setQuantities([...quantities, { sellingPrice, mrp, membershipPrice, availableQuantity, units, value: quantity }])\n    };\n\n    const delQuantity = (obj) => {\n        let _quantities = _.cloneDeep(quantities);\n        _.remove(_quantities, { _id: obj._id });\n        _.remove(_quantities, { value: obj.value, units: obj.units });\n        setQuantities(_quantities);\n    };\n\n    const onCategoryClick = (cat) => {\n        setCategory(cat);\n        setShowCategories(false);\n    }\n\n    const onSubmit = () => {\n        const json = {\n            name,\n            brand,\n            category: getCategoryId(category),\n            description,\n            pic,\n            quantity: quantities,\n            maxQuantity,\n        };\n        return productApis.addNewProduct(auth.userId, auth.token, json)\n            .then(response => {\n                document.getElementById(\"page\").style.pointerEvents = \"auto\";\n                document.getElementById(\"page\").style.opacity = \"1\";\n                dispatch(addNewProduct(response));\n                dispatch(toggleAddProductModal());\n            });\n    }\n\n    const onClickCancel = () => {\n        document.getElementById(\"page\").style.pointerEvents = \"auto\";\n        document.getElementById(\"page\").style.opacity = \"1\";\n        return dispatch(toggleAddProductModal());\n    }\n\n    return (\n        <React.Fragment>\n            {\n                isFileLoaded ?\n                    <React.Fragment>\n                        {/* MAIN FIELDS */}\n                        <div className=\"add-product-inpt-container\">\n                            <div className=\"add-product-label\">Name</div>\n                            <input\n                                type=\"text\"\n                                className=\"inpt add-new-product-inpt\"\n                                value={name}\n                                onChange={onNameChange}\n                            />\n                        </div>\n\n                        <div className=\"add-product-inpt-container\">\n                            <div className=\"add-product-label\">Brand</div>\n                            <input\n                                type=\"text\"\n                                className=\"inpt add-new-product-inpt\"\n                                value={brand}\n                                onChange={onBrandChange}\n                            />\n                        </div>\n\n                        <div className=\"add-product-inpt-container\">\n                            <div className=\"add-product-label\">Category</div>\n                            <input\n                                type=\"text\"\n                                className=\"inpt add-new-product-inpt\"\n                                value={category}\n                                onChange={onCategoryChange}\n                                onFocus={() => setShowCategories(true)}\n                            />\n                            {\n                                showCategories && categories && categories.length > 0 ?\n                                    <div className=\"filter-select-bg add-product-select-bg\">\n                                        <ul className=\"filter-select-ele\" onClick={() => onCategoryClick(\"\")}>none</ul>\n                                        {\n                                            categories.map(cate => {\n                                                return <ul className=\"filter-select-ele\" onClick={() => onCategoryClick(cate.name)}>{cate.name}</ul>\n                                            })\n                                        }\n                                    </div>\n                                    :\n                                    <React.Fragment />\n                            }\n                        </div>\n\n                        <div className=\"add-product-inpt-container\">\n                            <div className=\"add-product-label\">Description</div>\n                            <input\n                                type=\"text\"\n                                className=\"inpt add-new-product-inpt\"\n                                value={description}\n                                onChange={onDescriptionChange}\n                            />\n                        </div>\n\n                        {/* <div className=\"add-product-inpt-container\">\n                    <div className=\"add-product-label\">Pic</div>\n                    <input\n                        type=\"text\"\n                        className=\"inpt add-new-product-inpt\"\n                        value={pic}\n                        onChange={onPicChange}\n                    />\n                </div> */}\n\n                        <div className=\"add-product-inpt-container\">\n                            <div className=\"add-product-label\">MaxQuantity</div>\n                            <input\n                                type=\"text\"\n                                className=\"inpt add-new-product-inpt\"\n                                value={maxQuantity}\n                                onChange={onMaxQuantityChange}\n                            />\n                        </div>\n\n                        <div className=\"add-product-inpt-container file-container\">\n                            <div className=\"add-product-label\"></div>\n                            <label for=\"file-upload\" class=\"custom-file-upload\">\n                                Upload Pic\n                            </label>\n                            <input\n                                type=\"file\"\n                                id=\"file-upload\"\n                                onChange={onChangePic}\n                            />\n                            <input\n                                type=\"text\"\n                                className=\"inpt file-upload-inpt\"\n                                value={fileName}\n                            />\n                        </div>\n\n\n\n                        {/* Quantity */}\n\n                        <div className=\"quantity-bg\">\n                            <div className=\"add-product-inpt-container\">\n                                <div className=\"add-product-label added-quantity-label\">Quantity</div>\n                                <input\n                                    type=\"text\"\n                                    className=\"inpt add-new-product-inpt added-quantity\"\n                                    value={quantity}\n                                    onChange={onQuantityChange}\n                                    id=\"quantity\"\n                                />\n                            </div>\n\n                            <div className=\"add-product-inpt-container\">\n                                <div className=\"add-product-label added-quantity-label\">Units</div>\n                                <input\n                                    type=\"text\"\n                                    className=\"inpt add-new-product-inpt added-quantity\"\n                                    value={units}\n                                    onChange={onUnitsChange}\n                                    id=\"units\"\n                                />\n                            </div>\n                            <div className=\"add-product-inpt-container\">\n                                <div className=\"add-product-label added-quantity-label\">MRP</div>\n                                <input\n                                    type=\"number\"\n                                    className=\"inpt add-new-product-inpt added-quantity\"\n                                    value={mrp}\n                                    onChange={onMrpChange}\n                                    id=\"mrp\"\n                                />\n                            </div>\n\n                            <div className=\"add-product-inpt-container\">\n                                <div className=\"add-product-label added-quantity-label\">SellingPrice</div>\n                                <input\n                                    type=\"number\"\n                                    className=\"inpt add-new-product-inpt added-quantity\"\n                                    value={sellingPrice}\n                                    onChange={onSellingPriceChange}\n                                    id=\"sellingprice\"\n                                />\n                            </div>\n\n                            <div className=\"add-product-inpt-container\">\n                                <div className=\"add-product-label added-quantity-label\">SpecialPrice</div>\n                                <input\n                                    type=\"number\"\n                                    className=\"inpt add-new-product-inpt added-quantity\"\n                                    value={membershipPrice}\n                                    onChange={onMembershipPriceChange}\n                                    id=\"specialprice\"\n                                />\n                            </div>\n\n\n                            <div className=\"add-product-inpt-container\">\n                                <div className=\"add-product-label added-quantity-label\">Available Quantity</div>\n                                <input\n                                    type=\"number\"\n                                    value={availableQuantity}\n                                    onChange={onChangeAvailableQuantity}\n                                    className=\"inpt add-new-product-inpt added-quantity\"\n                                    id=\"availablequantity\"\n                                />\n                            </div>\n\n                            <div className=\"add-product-inpt-container\">\n                                <button className=\"btn add-new-product-btn add-btn\" onClick={() => addQuantity()}>ADD</button>\n                            </div>\n                        </div>\n\n\n                        {/* Added Quantity */}\n                        {\n                            quantities && quantities.length > 0 ?\n                                <div className=\"quantity-bg\">\n                                    <div className=\"added-quantities-ttl\">Added Quantities</div>\n                                    {quantities.map(obj => {\n                                        return (\n                                            <React.Fragment>\n                                                <div className=\"add-product-inpt-container\">\n                                                    <div className=\"add-product-label added-quantity-label\">Quantity</div>\n                                                    <input\n                                                        type=\"string\"\n                                                        className=\"inpt add-new-product-inpt added-quantity\"\n                                                        value={obj.value}\n                                                        disabled\n                                                    />\n                                                </div>\n\n                                                <div className=\"add-product-inpt-container\">\n                                                    <div className=\"add-product-label added-quantity-label\">Units</div>\n                                                    <input\n                                                        type=\"text\"\n                                                        className=\"inpt add-new-product-inpt added-quantity\"\n                                                        value={obj.units}\n                                                        disabled\n                                                    />\n                                                </div>\n                                                <div className=\"add-product-inpt-container\">\n                                                    <div className=\"add-product-label added-quantity-label\">MRP</div>\n                                                    <input\n                                                        type=\"number\"\n                                                        className=\"inpt add-new-product-inpt added-quantity\"\n                                                        value={obj.mrp}\n                                                        disabled\n                                                    />\n                                                </div>\n\n                                                <div className=\"add-product-inpt-container\">\n                                                    <div className=\"add-product-label added-quantity-label\">SellingPrice</div>\n                                                    <input\n                                                        type=\"number\"\n                                                        className=\"inpt add-new-product-inpt added-quantity\"\n                                                        value={obj.sellingPrice}\n                                                        disabled\n                                                    />\n                                                </div>\n\n                                                <div className=\"add-product-inpt-container\">\n                                                    <div className=\"add-product-label added-quantity-label\">SpecialPrice</div>\n                                                    <input\n                                                        type=\"number\"\n                                                        className=\"inpt add-new-product-inpt added-quantity\"\n                                                        value={obj.membershipPrice}\n                                                        disabled\n                                                    />\n                                                </div>\n\n\n                                                <div className=\"add-product-inpt-container\">\n                                                    <div className=\"add-product-label added-quantity-label\">AvailableUnits</div>\n                                                    <input\n                                                        type=\"text\"\n                                                        value={obj.availableQuantity}\n                                                        className=\"inpt add-new-product-inpt added-quantity\"\n                                                        disabled\n                                                    />\n                                                </div>\n                                                <div className=\"add-product-inpt-container\">\n                                                    <button className=\"btn add-new-product-btn add-btn\" onClick={() => delQuantity(obj)}>DEL</button>\n                                                </div>\n                                            </React.Fragment>\n                                        )\n                                    })}\n                                </div>\n                                :\n                                <React.Fragment />\n                        }\n\n                        <div className=\"add-product-inpt-container\">\n                            <button onClick={() => onClickCancel()} className=\"btn add-new-product-btn\">Cancel</button>\n                        </div>\n\n                        <div className=\"add-product-inpt-container\">\n                            <button onClick={() => onSubmit()} className=\"btn add-new-product-btn\">Save</button>\n                        </div>\n                    </React.Fragment>\n                    :\n                    <div className=\"add-product-loading\">\n                        LOADING....\n            </div>\n            }\n        </React.Fragment>\n    )\n};\n\nexport default AddNewProduct;","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleEditProductModal, updateProduct, toggleDeleteProductModal, deleteProduct } from \"../ReduxStore/Actions\";\nimport apis from \"../APICalls\";\n\nconst _ = require(\"lodash\");\nconst productApis = apis.productApis();\n\nconst EditProduct = props => {\n    const dispatch = useDispatch();\n    const auth = useSelector(state => state.auth);\n    const deleteToggleOpen = useSelector(state => state.toggler.deleteProductModal);\n\n    const [name, setName] = useState(\"\");\n    const [brand, setBrand] = useState(\"\");\n    const [category, setCategory] = useState(\"\");\n    const [units, setUnits] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [pic, setPic] = useState(\"\");\n    const [mrp, setMrp] = useState(0);\n    const [sellingPrice, setSellingPrice] = useState(0);\n    const [membershipPrice, setMembershipPrice] = useState(0);\n    const [quantity, setQuantity] = useState();\n    const [isMultipleDeliveryAvailable, setIsMultipleDeliveryAvailable] = useState(false);\n    const [availableQuantity, setAvailableQuantity] = useState(0);\n    const [quantities, setQuantities] = useState([]);\n    const [showCategories, setShowCategories] = useState(false);\n    const [maxQuantity, setMaxQuantity] = useState(5);\n    const [id, setId] = useState(\"\");\n\n    const onNameChange = event => setName(event.target.value);\n    const onBrandChange = event => setBrand(event.target.value);\n    const onCategoryChange = event => setCategory(event.target.value);\n    const onMrpChange = event => setMrp(event.target.value);\n    const onSellingPriceChange = event => setSellingPrice(event.target.value);\n    const onMembershipPriceChange = event => setMembershipPrice(event.target.value);\n    const onUnitsChange = event => setUnits(event.target.value);\n    const onQuantityChange = event => setQuantity(event.target.value);\n    const onPicChange = event => setPic(event.target.value);\n    const onDescriptionChange = event => setDescription(event.target.value);\n    const onChangeIsMultipleDeliveryAvailable = event => setIsMultipleDeliveryAvailable(!isMultipleDeliveryAvailable);\n    const onChangeAvailableQuantity = event => setAvailableQuantity(event.target.value);\n    const onMaxQuantityChange = event => setMaxQuantity(event.target.value);\n    // const onIdChange = event => setId(event.target.value);\n\n    let categories = useSelector(state => state.categories.categories);\n\n    useState(() => {\n        productApis.getProduct(auth.userId, auth.token, props.productId)\n            .then(response => {\n                setId(response._id);\n                setName(response.name);\n                setBrand(response.brand);\n                setCategory(getCategoryName(response.category));\n                setDescription(response.description);\n                setMembershipPrice(response.membershipPrice);\n                setIsMultipleDeliveryAvailable(response.isMultipleDeliveryAvailable);\n                setPic(response.pic);\n                setQuantities(response.quantity);\n                setMaxQuantity(response.maxQuantity);\n            })\n    }, []);\n\n    const onSubmit = () => {\n        const json = {\n            name,\n            brand,\n            category: getCategoryId(category),\n            description,\n            pic,\n            quantity: quantities,\n            isMultipleDeliveryAvailable,\n            maxQuantity,\n        };\n        return productApis.updateProduct(auth.userId, auth.token, props.productId, json)\n            .then(response => {\n                document.getElementById(\"page\").style.pointerEvents = \"auto\";\n                document.getElementById(\"page\").style.opacity = \"1\";\n                dispatch(updateProduct(props.productId, json));\n                dispatch(toggleEditProductModal());\n            });\n    };\n\n    const getCategoryId = (name) => {\n        let id = \"\";\n        categories.forEach(cat => {\n            if (cat.name === name) {\n                id = cat._id;\n            }\n        });\n        return id;\n    };\n\n    const getCategoryName = (id) => {\n        let name = \"\";\n        categories.forEach(cat => {\n            if (cat._id === id) name = cat.name;\n        });\n        return name;\n    };\n\n    const addQuantity = () => {\n        setUnits(\"\");\n        setAvailableQuantity(0);\n        setMrp(0);\n        setSellingPrice(0);\n        setQuantity(0);\n        setMembershipPrice(0);\n        setQuantities([...quantities, { sellingPrice, mrp, membershipPrice, availableQuantity, units, value: quantity }])\n    };\n\n    const delQuantity = (obj) => {\n        let _quantities = _.clone(quantities);\n        _.remove(_quantities, { _id: obj._id });\n        _.remove(_quantities, { value: obj.value, units: obj.units });\n        setQuantities(_quantities);\n    };\n\n    const onClickDelete = () => {\n        document.getElementById(\"edit-product-bg\").style.pointerEvents = \"none\";\n        document.getElementById(\"edit-product-bg\").style.opacity = \"0.2\";\n        dispatch(toggleDeleteProductModal());\n    };\n\n    const onClickCancel = () => {\n        document.getElementById(\"page\").style.pointerEvents = \"auto\";\n        document.getElementById(\"page\").style.opacity = \"1\";\n        return dispatch(toggleEditProductModal());\n    };\n\n    const onClickDeleteYes = () => {\n        document.getElementById(\"edit-product-bg\").style.pointerEvents = \"auto\";\n        document.getElementById(\"edit-product-bg\").style.opacity = \"1\";\n        document.getElementById(\"page\").style.pointerEvents = \"auto\";\n        document.getElementById(\"page\").style.opacity = \"1\";\n        return productApis.deleteProduct(auth.userId, auth.token, props.productId)\n            .then(response => dispatch(deleteProduct(props.productId)))\n            .then(() => dispatch(toggleDeleteProductModal()))\n            .then(() => dispatch(toggleEditProductModal()));\n    };\n\n    const onClickDeleteNo = () => {\n        document.getElementById(\"edit-product-bg\").style.pointerEvents = \"auto\";\n        document.getElementById(\"edit-product-bg\").style.opacity = \"1\";\n        dispatch(toggleDeleteProductModal());\n    };\n\n    const onCategoryClick = (cat) => {\n        setCategory(cat);\n        setShowCategories(false);\n    };\n\n    return (\n        <React.Fragment>\n            {(() => {\n                if (deleteToggleOpen) {\n                    return <div className=\"delete-product-modal w3-animate-zoom\">\n                        <p className=\"modal-title delete-modal-title\">Are you sure?</p>\n                        <div className=\"btn-bg\">\n                            <button className=\"btn add-new-product-btn delete-btn block-btn\" onClick={() => onClickDeleteYes()}>Yes</button>\n                            <button className=\"btn add-new-product-btn block-btn\" onClick={() => onClickDeleteNo()}>No</button>\n                        </div>\n                    </div>\n                } else {\n                    return <React.Fragment />\n                }\n            })()}\n            <div id=\"edit-product-bg\">\n\n                <div className=\"add-product-inpt-container\">\n                    <div className=\"add-product-label\">Id</div>\n                    <input\n                        type=\"text\"\n                        className=\"inpt add-new-product-inpt\"\n                        value={id}\n                        id=\"quantityId\"\n                    />\n                </div>\n\n                <div className=\"add-product-inpt-container\">\n                    <div className=\"add-product-label\">Name</div>\n                    <input\n                        type=\"text\"\n                        className=\"inpt add-new-product-inpt\"\n                        value={name}\n                        onChange={onNameChange}\n                    />\n                </div>\n\n                <div className=\"add-product-inpt-container\">\n                    <div className=\"add-product-label\">Brand</div>\n                    <input\n                        type=\"text\"\n                        className=\"inpt add-new-product-inpt\"\n                        value={brand}\n                        onChange={onBrandChange}\n                    />\n                </div>\n\n                <div className=\"add-product-inpt-container\">\n                    <div className=\"add-product-label\">Category</div>\n                    <input\n                        type=\"text\"\n                        className=\"inpt add-new-product-inpt\"\n                        value={category}\n                        onChange={onCategoryChange}\n                        onFocus={() => setShowCategories(true)}\n                    />\n                    {\n                        showCategories && categories && categories.length > 0 ?\n                            <div className=\"filter-select-bg add-product-select-bg\">\n                                <ul className=\"filter-select-ele\" onClick={() => onCategoryClick(\"\")}>none</ul>\n                                {\n                                    categories.map(cate => {\n                                        return <ul className=\"filter-select-ele\" onClick={() => onCategoryClick(cate.name)}>{cate.name}</ul>\n                                    })\n                                }\n                            </div>\n                            :\n                            <React.Fragment />\n                    }\n                </div>\n\n                <div className=\"add-product-inpt-container\">\n                    <div className=\"add-product-label\">Description</div>\n                    <input\n                        type=\"text\"\n                        className=\"inpt add-new-product-inpt\"\n                        value={description}\n                        onChange={onDescriptionChange}\n                    />\n                </div>\n\n                <div className=\"add-product-inpt-container\">\n                    <div className=\"add-product-label\">Picture</div>\n                    <input\n                        type=\"text\"\n                        className=\"inpt add-new-product-inpt\"\n                        value={pic}\n                        onChange={onPicChange}\n                    />\n                </div>\n\n                <div className=\"add-product-inpt-container\">\n                    <div className=\"add-product-label\">MaxQuantity</div>\n                    <input\n                        type=\"text\"\n                        className=\"inpt add-new-product-inpt\"\n                        value={maxQuantity}\n                        onChange={onMaxQuantityChange}\n                    />\n                </div>\n\n                <div className=\"add-product-inpt-container\">\n                    <div className=\"add-product-label\">Mutliple Day Delivery</div>\n                    <input\n                        type=\"checkbox\"\n                        value={isMultipleDeliveryAvailable}\n                        onChange={onChangeIsMultipleDeliveryAvailable}\n                        className=\"checkbox\"\n                    />\n                </div>\n\n                {/* Quantity */}\n\n                <div className=\"quantity-bg\">\n\n                    <div className=\"add-product-inpt-container\">\n                        <div className=\"add-product-label added-quantity-label\">Quantity</div>\n                        <input\n                            type=\"text\"\n                            className=\"inpt add-new-product-inpt added-quantity\"\n                            value={quantity}\n                            onChange={onQuantityChange}\n                            id=\"quantity\"\n                        />\n                    </div>\n\n                    <div className=\"add-product-inpt-container\">\n                        <div className=\"add-product-label added-quantity-label\">Units</div>\n                        <input\n                            type=\"text\"\n                            className=\"inpt add-new-product-inpt added-quantity\"\n                            value={units}\n                            onChange={onUnitsChange}\n                            id=\"units\"\n                        />\n                    </div>\n                    <div className=\"add-product-inpt-container\">\n                        <div className=\"add-product-label added-quantity-label\">MRP</div>\n                        <input\n                            type=\"number\"\n                            className=\"inpt add-new-product-inpt added-quantity\"\n                            value={mrp}\n                            onChange={onMrpChange}\n                            id=\"mrp\"\n                        />\n                    </div>\n\n                    <div className=\"add-product-inpt-container\">\n                        <div className=\"add-product-label added-quantity-label\">SellingPrice</div>\n                        <input\n                            type=\"number\"\n                            className=\"inpt add-new-product-inpt added-quantity\"\n                            value={sellingPrice}\n                            onChange={onSellingPriceChange}\n                            id=\"sellingprice\"\n                        />\n                    </div>\n\n                    <div className=\"add-product-inpt-container\">\n                        <div className=\"add-product-label added-quantity-label\">SpecialPrice</div>\n                        <input\n                            type=\"number\"\n                            className=\"inpt add-new-product-inpt added-quantity\"\n                            value={membershipPrice}\n                            onChange={onMembershipPriceChange}\n                            id=\"specialprice\"\n                        />\n                    </div>\n\n\n                    <div className=\"add-product-inpt-container\">\n                        <div className=\"add-product-label added-quantity-label\">Available Quantity</div>\n                        <input\n                            type=\"number\"\n                            value={availableQuantity}\n                            onChange={onChangeAvailableQuantity}\n                            className=\"inpt add-new-product-inpt added-quantity\"\n                            id=\"availablequantity\"\n                        />\n                    </div>\n\n                    <div className=\"add-product-inpt-container\">\n                        <button className=\"btn add-new-product-btn add-btn\" onClick={() => addQuantity()}>ADD</button>\n                    </div>\n                </div>\n\n\n                {/* Added Quantity */}\n                {\n                    quantities && quantities.length > 0 ?\n                        <div className=\"quantity-bg\">\n                            <div className=\"added-quantities-ttl\">Added Quantities</div>\n                            {quantities.map(obj => {\n                                return (\n                                    <React.Fragment>\n                                        <div className=\"add-product-inpt-container\">\n                                            <div className=\"add-product-label added-quantity-label\">Quantity</div>\n                                            <input\n                                                type=\"string\"\n                                                className=\"inpt add-new-product-inpt added-quantity\"\n                                                value={obj.value}\n                                                disabled\n                                            />\n                                        </div>\n\n                                        <div className=\"add-product-inpt-container\">\n                                            <div className=\"add-product-label added-quantity-label\">Units</div>\n                                            <input\n                                                type=\"text\"\n                                                className=\"inpt add-new-product-inpt added-quantity\"\n                                                value={obj.units}\n                                                disabled\n                                            />\n                                        </div>\n                                        <div className=\"add-product-inpt-container\">\n                                            <div className=\"add-product-label added-quantity-label\">MRP</div>\n                                            <input\n                                                type=\"number\"\n                                                className=\"inpt add-new-product-inpt added-quantity\"\n                                                value={obj.mrp}\n                                                disabled\n                                            />\n                                        </div>\n\n                                        <div className=\"add-product-inpt-container\">\n                                            <div className=\"add-product-label added-quantity-label\">SellingPrice</div>\n                                            <input\n                                                type=\"number\"\n                                                className=\"inpt add-new-product-inpt added-quantity\"\n                                                value={obj.sellingPrice}\n                                                disabled\n                                            />\n                                        </div>\n\n                                        <div className=\"add-product-inpt-container\">\n                                            <div className=\"add-product-label added-quantity-label\">SpecialPrice</div>\n                                            <input\n                                                type=\"number\"\n                                                className=\"inpt add-new-product-inpt added-quantity\"\n                                                value={obj.membershipPrice}\n                                                disabled\n                                            />\n                                        </div>\n\n\n                                        <div className=\"add-product-inpt-container\">\n                                            <div className=\"add-product-label added-quantity-label\">AvailableUnits</div>\n                                            <input\n                                                type=\"text\"\n                                                value={obj.availableQuantity}\n                                                className=\"inpt add-new-product-inpt added-quantity\"\n                                                disabled\n                                            />\n                                        </div>\n                                        <div className=\"add-product-inpt-container\">\n                                            <button className=\"btn add-new-product-btn add-btn\" onClick={() => delQuantity(obj)}>DEL</button>\n                                        </div>\n                                    </React.Fragment>\n                                )\n                            })}\n                        </div>\n                        :\n                        <React.Fragment />\n                }\n\n                <div className=\"add-product-inpt-container\">\n                    <button onClick={() => onClickCancel()} className=\"btn add-new-product-btn\">Cancel</button>\n                </div>\n\n                <div className=\"add-product-inpt-container\">\n                    <button onClick={() => onSubmit()} className=\"btn add-new-product-btn\">Save</button>\n                </div>\n\n                <div className=\"add-product-inpt-container\">\n                    <button onClick={() => onClickDelete()} className=\"btn add-new-product-btn delete-btn\">delete</button>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n};\n\nexport default EditProduct;","import React, { useEffect, useState } from \"react\";\nimport apis from \"../APICalls\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setProducts,\n  toggleAddProductModal,\n  toggleEditProductModal,\n  filterProducts,\n  getAllCategories,\n} from \"../ReduxStore/Actions\";\nimport AddNewProduct from \"./AddNewProduct\";\nimport EditProduct from \"./EditProduct\";\n\nconst Promise = require(\"bluebird\");\n\nconst productApis = apis.productApis();\nconst categoryApis = apis.categoryApis();\n\nconst Products = (props) => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [loader, setLoader] = useState(true);\n  const [productId, setProductId] = useState(\"\");\n  const [isFiltered, setIsFiltered] = useState(false);\n  const [showCategories, setShowCategories] = useState(false);\n\n  const changeName = (event) => {\n    setName(event.target.value);\n    setIsFiltered(false);\n  };\n\n  const changeBrand = (event) => {\n    setBrand(event.target.value);\n    setIsFiltered(false);\n  };\n\n  const changeCategory = (event) => {\n    setCategory(event.target.value);\n    setIsFiltered(false);\n  };\n\n  let products;\n  useEffect(() => {\n    const getProductsP = productApis\n      .getAllProducts(props.auth.userId, props.auth.token)\n      .then((response) => {\n        dispatch(setProducts(response));\n        console.log(\"Sunny@@     PRODUCTS!!!!!!   \", response);\n      })\n      .then(() => setLoader(false));\n    const getCategoriesP = categoryApis\n      .getAllCategories(props.auth.userId, props.auth.token)\n      .then((response) => {\n        dispatch(getAllCategories(response));\n      });\n    return Promise.join(getProductsP, getCategoriesP).tap(() => {\n      setLoader(false);\n    });\n  }, []);\n\n  let filteredProducts = useSelector(\n    (state) => state.products.filteredProducts\n  );\n  let allProducts = useSelector((state) => state.products.products);\n  let categories = useSelector((state) => state.categories.categories);\n\n  if (isFiltered) products = filteredProducts;\n  else products = allProducts;\n\n  const addProductModalOpen = useSelector(\n    (state) => state.toggler.addProductModal\n  );\n  const editProductModalOpen = useSelector(\n    (state) => state.toggler.editProductModal\n  );\n\n  const getCategoryId = (name) => {\n    let id = \"\";\n    categories.forEach((cat) => {\n      if (cat.name === name) {\n        id = cat._id;\n      }\n    });\n    return id;\n  };\n\n  const onClickProduct = (productId) => {\n    setProductId(productId);\n    document.getElementById(\"page\").style.pointerEvents = \"none\";\n    document.getElementById(\"page\").style.opacity = \"0.2\";\n    return dispatch(toggleEditProductModal());\n  };\n\n  const onFilterClick = () => {\n    setIsFiltered(true);\n    return dispatch(filterProducts(name, getCategoryId(category), brand));\n  };\n\n  const onClickNewAdd = () => {\n    document.getElementById(\"page\").style.pointerEvents = \"none\";\n    document.getElementById(\"page\").style.opacity = 0.2;\n    return dispatch(toggleAddProductModal());\n  };\n\n  const onCategoryClick = (cat) => {\n    setCategory(cat);\n    setShowCategories(false);\n  };\n\n  return (\n    <React.Fragment>\n      {loader ? (\n        <p className=\"loader\">LOADING...</p>\n      ) : (\n        <React.Fragment>\n          {(() => {\n            if (addProductModalOpen) {\n              return (\n                <div className=\"add-product-modal w3-animate-zoom\">\n                  <div className=\"add-new-product-bg\">\n                    <div className=\"add-product-title-bg\">\n                      <p className=\"modal-title\">ADD PRODUCT</p>\n                    </div>\n                    <AddNewProduct />\n                  </div>\n                </div>\n              );\n            } else if (editProductModalOpen) {\n              return (\n                <div className=\"add-product-modal w3-animate-zoom\">\n                  <div className=\"add-new-product-bg\">\n                    <div className=\"add-product-title-bg\">\n                      <p className=\"modal-title\">EDIT PRODUCT</p>\n                    </div>\n                    <EditProduct productId={productId} />\n                  </div>\n                </div>\n              );\n            } else {\n              return <React.Fragment />;\n            }\n          })()}\n          <div id=\"page\">\n            {\n              <div className=\"table-bg\">\n                {products.length === 0 ? (\n                  <h3 className=\"no-products\">OOPS! NO PRODUCTS</h3>\n                ) : (\n                  products.map((product) => {\n                    return (\n                      <div\n                        className=\"product-card\"\n                        onClick={() => onClickProduct(product._id)}\n                      >\n                        <img className=\"product-img\" src={product.pic} />\n                        <div className=\"container\">\n                          <p className=\"product-title\">\n                            {product.brand} {product.name} (\n                            {product.quantity[0].value}\n                            {product.quantity[0].units})\n                          </p>\n                          <p className=\"mrp\">\n                            <s>{product.quantity[0].mrp}&#x20B9;</s>{\" \"}\n                            {product.quantity[0].sellingPrice}&#x20B9;\n                          </p>\n                        </div>\n                      </div>\n                    );\n                  })\n                )}\n              </div>\n            }\n            <div className=\"actions-bg\">\n              <button class=\"add-product-btn\" onClick={() => onClickNewAdd()}>\n                Add New\n              </button>\n              <br />\n              {/* <div className=\"filter-form\"> */}\n              <div className=\"filter-label\">Name</div>\n              <input\n                type=\"text\"\n                value={name}\n                className=\"inpt filter-inpt\"\n                onChange={changeName}\n              />\n              <div className=\"filter-label\">Category</div>\n              <div>\n                <input\n                  type=\"text\"\n                  className=\"inpt filter-inpt\"\n                  value={category}\n                  onChange={changeCategory}\n                  onFocus={() => setShowCategories(true)}\n                />\n                {showCategories && categories.length > 0 ? (\n                  <div className=\"filter-select-bg\">\n                    <ul\n                      className=\"filter-select-ele\"\n                      onClick={() => onCategoryClick(\"\")}\n                    >\n                      none\n                    </ul>\n                    {categories.map((cate) => {\n                      return (\n                        <ul\n                          className=\"filter-select-ele\"\n                          onClick={() => onCategoryClick(cate.name)}\n                        >\n                          {cate.name}\n                        </ul>\n                      );\n                    })}\n                  </div>\n                ) : (\n                  <React.Fragment />\n                )}\n              </div>\n              <div className=\"filter-label\">Brand</div>\n              <input\n                type=\"text\"\n                value={brand}\n                className=\"inpt filter-inpt\"\n                onChange={changeBrand}\n              />\n              <br />\n              <br />\n              {!isFiltered ? (\n                <button class=\"filter-btn\" onClick={() => onFilterClick()}>\n                  Filter\n                </button>\n              ) : (\n                <button class=\"filter-btn\" onClick={() => setIsFiltered(false)}>\n                  Cancel\n                </button>\n              )}\n              {/* </div> */}\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Products;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleAddCategoryModal, addCategory } from \"../ReduxStore/Actions\";\nimport apis from \"../APICalls\";\n\nconst categoryApis = apis.categoryApis();\nconst uploadApis = apis.uploadApis();\n\nconst AddCategory = props => {\n\n    const dispatch = useDispatch();\n    const auth = useSelector(state => state.auth);\n\n    const [name, setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [pic, setPic] = useState(\"\");\n    const [category, setCategory] = useState(\"\");\n    const [showCategories, setShowCategories] = useState(false);\n    const [isFileLoaded, setIsFileLoaded] = useState(true);\n    const [fileName, setFileName] = useState(\"\");\n    const [isMainCategory, setIsMainCategory] = useState(false);\n\n\n    const onNameChange = event => setName(event.target.value);\n    const onDescriptionChange = event => setDescription(event.target.value);\n    const onCategoryChange = event => setCategory(event.target.value);\n    const onPicChange = event => setPic(event.target.value);\n\n    const onClickCancel = () => {\n        document.getElementById(\"category\").style.pointerEvents = \"auto\";\n        document.getElementById(\"category\").style.opacity = 1;\n        return dispatch(toggleAddCategoryModal());\n    };\n\n    const getCategoryId = (name) => {\n        let id = \"\";\n        categories.forEach(cat => {\n            if(cat.name === name) {\n                id = cat._id;\n            }\n        });\n        return id;\n    };\n\n    const onSubmit = () => {\n        const json = {\n            name,\n            pic,\n            category: getCategoryId(category),\n            description,\n            isMainCategory\n        };\n        return categoryApis.addCategory(auth.userId, auth.token, json)\n            .then(response => {\n                document.getElementById(\"category\").style.pointerEvents = \"auto\";\n                document.getElementById(\"category\").style.opacity = \"1\";\n                dispatch(addCategory(response));\n                dispatch(toggleAddCategoryModal());\n            });\n    };\n\n    const onChangePic = event => {\n        setIsFileLoaded(false);\n        event.preventDefault();\n        let data = new FormData();\n        setFileName(event.target.value);\n        data.append(\"image\", event.target.files[0]);\n        uploadApis.uploadFile(auth.userId, auth.token, data)\n            .then(response => {\n                if (response) {\n                    setIsFileLoaded(true);\n                    setPic(response.Location);\n                }\n            })\n    }\n\n    const onCategoryClick = (cat) => {\n        setCategory(cat);\n        setShowCategories(false);\n    }\n\n    const categories = useSelector(state => state.categories.categories);\n\n    return (\n        <React.Fragment>\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">Name</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt add-category-inpt\"\n                    value={name}\n                    onChange={onNameChange}\n                />\n            </div>\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">Description</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt add-category-inpt\"\n                    value={description}\n                    onChange={onDescriptionChange}\n                />\n            </div>\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">Is Main Category</div>\n                <input\n                    type=\"checkbox\"\n                    checked={isMainCategory}\n                    className=\"\"\n                    onChange={() => setIsMainCategory(!isMainCategory)}\n                />\n            </div>\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">Category</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt add-category-inpt\"\n                    value={category}\n                    onChange={onCategoryChange}\n                    onFocus={() => setShowCategories(true)}\n                />\n                {\n                    showCategories && categories.length > 0 ?\n                        <div className=\"filter-select-bg add-category-select-bg\">\n                            <ul className=\"filter-select-ele\" onClick={() => onCategoryClick(\"\")}>none</ul>\n                            {\n                                categories.map(cate => {\n                                    return <ul className=\"filter-select-ele\" onClick={() => onCategoryClick(cate.name)}>{cate.name}</ul>\n                                })\n                            }\n                        </div>\n                        :\n                        <React.Fragment />\n                }\n            </div>\n            <div className=\"add-product-inpt-container file-container\">\n                <div className=\"add-product-label\"></div>\n                <label for=\"file-upload\" class=\"custom-file-upload\">\n                    Upload Pic\n                </label>\n                <input\n                    type=\"file\"\n                    id=\"file-upload\"\n                    onChange={onChangePic}\n                />\n                <input\n                    type=\"text\"\n                    className=\"inpt file-upload-inpt\"\n                    value={fileName}\n                    />\n            </div>\n\n            <div className=\"add-product-inpt-container\">\n                <button onClick={() => onClickCancel()} className=\"btn add-new-product-btn\">Cancel</button>\n            </div>\n\n            <div className=\"add-product-inpt-container\">\n                <button onClick={() => onSubmit()} className=\"btn add-new-product-btn\">Save</button>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default AddCategory;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleDeleteCategoryModal, toggleEditCategoryModal, updateCategory } from \"../ReduxStore/Actions\";\nimport apis from \"../APICalls\";\n\nconst categoryApis = apis.categoryApis();\n\nconst EditProduct = props => {\n    const dispatch = useDispatch();\n    const categories = useSelector(state => state.categories.categories);\n    const deleteToggleOpen = useSelector(state => state.toggler.deleteCategoryModal);\n    const auth = useSelector(state => state.auth);\n\n    const [name, setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [pic, setPic] = useState(\"\");\n    const [category, setCategory] = useState(\"\");\n    const [showCategories, setShowCategories] = useState(false);\n    const [id, setId] = useState(\"\");\n    const [isMainCategory, setIsMainCategory] = useState(false);\n\n    useEffect(() => {\n        setName(props.category.name);\n        setDescription(props.category.description);\n        setPic(props.category.pic);\n        setCategory(getCategoryName(props.category.category));\n        setId(props.category._id);\n        setIsMainCategory(props.category.isMainCategory);\n    }, []);\n\n    const getCategoryName = (id) => {\n        let name = \"\";\n        categories.forEach(cat => {\n            if (cat._id === id) name = cat.name;\n        });\n        return name;\n    };\n\n    const onClickDelete = () => {\n        document.getElementById(\"edit-category\").style.pointerEvents = \"none\";\n        document.getElementById(\"edit-category\").style.opacity = \"0.2\";\n        dispatch(toggleDeleteCategoryModal());\n    };\n\n    const onClickCancel = () => {\n        document.getElementById(\"category\").style.pointerEvents = \"auto\";\n        document.getElementById(\"category\").style.opacity = \"1\";\n        return dispatch(toggleEditCategoryModal());\n    };\n\n    const getCategoryId = (name) => {\n        let id = \"\";\n        categories.forEach(cat => {\n            if(cat.name === name) {\n                id = cat._id;\n            }\n        });\n        return id;\n    };\n\n    const onClickDeleteYes = () => {};\n    const onClickDeleteNo = () => {};\n    const onNameChange = event => setName(event.target.value);\n    const onDescriptionChange = event => setDescription(event.target.value);\n    const onCategoryChange = event => setCategory(event.target.value);\n    const onCategoryClick = (cat) => {\n        setCategory(cat);\n        setShowCategories(false);\n    }\n    const onPicChange = event => setPic(event.target.value);\n    const onSubmit = () => {\n        const json = {\n            _id: props.category._id,\n            name,\n            category : getCategoryId(category),\n            pic,\n            description,\n            isMainCategory\n        };\n        return categoryApis.updateCategory(auth.userId, auth.token, props.category._id, json)\n        .then(response => {\n            document.getElementById(\"category\").style.pointerEvents = \"auto\";\n            document.getElementById(\"category\").style.opacity = \"1\";\n            dispatch(updateCategory(response._id, json));\n            dispatch(toggleEditCategoryModal());\n        });\n    };\n\n    return (\n        <React.Fragment>\n            {(() => {\n                if (deleteToggleOpen) {\n                    return <div className=\"delete-product-modal w3-animate-zoom\">\n                        <p className=\"modal-title delete-modal-title\">Are you sure?</p>\n                        <div className=\"btn-bg\">\n                            <button className=\"btn add-new-product-btn delete-btn block-btn\" onClick={() => onClickDeleteYes()}>Yes</button>\n                            <button className=\"btn add-new-product-btn block-btn\" onClick={() => onClickDeleteNo()}>No</button>\n                        </div>\n                    </div>\n                } else {\n                    return <React.Fragment />\n                }\n            })()}\n            <div id=\"edit-category\">\n                <div className=\"add-product-inpt-container\">\n                    <div className=\"add-product-label\">Id</div>\n                    <input\n                        type=\"text\"\n                        className=\"inpt add-new-product-inpt add-category-inpt\"\n                        value={id}\n                    />\n                </div>\n                <div className=\"add-product-inpt-container\">\n                    <div className=\"add-product-label\">Name</div>\n                    <input\n                        type=\"text\"\n                        className=\"inpt add-new-product-inpt add-category-inpt\"\n                        value={name}\n                        onChange={onNameChange}\n                    />\n                </div>\n                <div className=\"add-product-inpt-container\">\n                    <div className=\"add-product-label\">Description</div>\n                    <input\n                        type=\"text\"\n                        className=\"inpt add-new-product-inpt add-category-inpt\"\n                        value={description}\n                        onChange={onDescriptionChange}\n                    />\n                </div>\n\n                <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">Is Main Category</div>\n                    <input\n                        type=\"checkbox\"\n                        checked={isMainCategory}\n                        className=\"\"\n                        onChange={() => setIsMainCategory(!isMainCategory)}\n                    />\n                </div>\n                <div className=\"add-product-inpt-container\">\n                    <div className=\"add-product-label\">Category</div>\n                    <input\n                        type=\"text\"\n                        className=\"inpt add-new-product-inpt add-category-inpt\"\n                        value={category}\n                        onChange={onCategoryChange}\n                        onFocus={() => setShowCategories(true)}\n                    />\n                    {\n                        showCategories && categories && categories.length > 0 ?\n                            <div className=\"filter-select-bg add-category-select-bg\">\n                                <ul className=\"filter-select-ele\" onClick={() => onCategoryClick(\"\")}>none</ul>\n                                {\n                                    categories.map(cate => {\n                                        return <ul className=\"filter-select-ele\" onClick={() => onCategoryClick(cate.name)}>{cate.name}</ul>\n                                    })\n                                }\n                            </div>\n                            :\n                            <React.Fragment />\n                    }\n                </div>\n                <div className=\"add-product-inpt-container\">\n                    <div className=\"add-product-label\">Pic</div>\n                    <input\n                        type=\"text\"\n                        className=\"inpt add-new-product-inpt add-category-inpt\"\n                        value={pic}\n                        onChange={onPicChange}\n                    />\n                </div>\n\n                <div className=\"add-product-inpt-container\">\n                    <button onClick={() => onClickCancel()} className=\"btn add-new-product-btn\">Cancel</button>\n                </div>\n\n                <div className=\"add-product-inpt-container\">\n                    <button onClick={() => onSubmit()} className=\"btn add-new-product-btn\">Save</button>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n};\n\nexport default EditProduct;","import React, { useState, useEffect } from \"react\";\nimport apis from \"../APICalls\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    getAllCategories,\n    toggleAddCategoryModal,\n    toggleEditCategoryModal,\n} from \"../ReduxStore/Actions\";\nimport AddCategory from \"./AddCategory\";\nimport EditCategory from \"./EditCategory\";\n\nconst categoryApis = apis.categoryApis();\n\nconst Category = props => {\n    const auth = useSelector(state => state.auth);\n    const dispatch = useDispatch();\n    const [loader, setLoader] = useState(true);\n    const [category, setCategory] = useState({});\n\n    let categories = [];\n\n    useEffect(() => {\n        categoryApis.getAllCategories(auth.userId, auth.token)\n        .then(response => {\n            dispatch(getAllCategories(response));\n            setLoader(false);\n        });\n    }, []);\n\n    categories = useSelector(state => state.categories.categories);\n    \n    const addCategoryModal = useSelector(state => state.toggler.addCategoryModal);\n    const editCategoryModal = useSelector(state => state.toggler.editCategoryModal);\n\n    const onClickAddCategory = () => {\n        document.getElementById(\"category\").style.pointerEvents = \"none\";\n        document.getElementById(\"category\").style.opacity = 0.2;\n        return dispatch(toggleAddCategoryModal());\n    };\n\n    const onClickCategory = category => {\n        setCategory(category);\n        document.getElementById(\"category\").style.pointerEvents = \"none\";\n        document.getElementById(\"category\").style.opacity = \"0.2\";\n        return dispatch(toggleEditCategoryModal());\n    };\n\n    return (\n        <React.Fragment>\n            {\n                (() => {\n                    if(addCategoryModal) {\n                        return (\n                            <div className=\"add-category-modal w3-animate-zoom\">\n                                <div className=\"add-category-bg\">\n                                    <div className=\"add-product-title-bg\">\n                                        <p className=\"modal-title\">ADD CATEGORY</p>\n                                    </div>\n                                    <AddCategory/>\n                                </div>\n                            </div>\n                        )\n                    } else if(editCategoryModal) {\n                        return (\n                            <div className=\"add-category-modal w3-animate-zoom\">\n                                <div className=\"add-category-bg\">\n                                    <div className=\"add-product-title-bg\">\n                                        <p className=\"modal-title\">ADD CATEGORY</p>\n                                    </div>\n                                    <EditCategory category={category}/>\n                                </div>\n                            </div>\n                        )\n                    }\n                })()\n            }\n            <div id=\"category\">\n                <div className=\"category-bg\">\n                    {\n                        categories.map(category => {\n                            return (\n                                <div className=\"category-card\" onClick={() => onClickCategory(category)}>\n                                    <div className=\"category-content\">\n                                        <div className=\"category-name\">{category.name}</div>\n                                        <hr className=\"line\"/>\n                                        <div className=\"category-description\">{category.description}</div>\n                                    </div>\n                                    <img src={category.pic} className=\"category-img\"/>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n                <div className=\"category-action\">\n                    <div className=\"category-action-card\">\n                        <button className=\"category-add-btn\" onClick={() => onClickAddCategory()}>ADD CATEGORY</button>\n                        <br/>\n                        <div className=\"pro-tip\">\n                            <img className=\"pro-tip-img\" src=\"https://cdn0.iconfinder.com/data/icons/ui-beast-6/32/UI-19-128.png\"/>\n                            <div className=\"category-description pro-tip-text\">\n                                To create sub category add category to a category.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n};\n\nexport default Category;\n\n","import React, { useState, useEffect } from \"react\";\nimport apis from \"../APICalls\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleEditOrderModal, editOrder } from \"../ReduxStore/Actions\";\n\nconst moment = require(\"moment\");\nconst productApis = apis.productApis();\nconst orderApis = apis.orderApis();\nconst _ = require(\"lodash\");\n\nconst EditOrder = props => {\n    const [productsToBeDelivered, setProductsToBeDelivered] = useState(props.order && props.order.cart && props.order.cart.products || []);\n    const [status, setStatus] = useState(props.order.status);\n    const [slot, setSlot] = useState(props.order.cart.slot);\n    const [productNameMapper, setProductNameMapper] = useState({});\n    const [productName, setProductName] = useState(\"\");\n    const [qty, setQty] = useState(\"\");\n    const [count, setCount] = useState(0);\n    const [product, setProduct] = useState({});\n    const dispatch = useDispatch();\n    const [inCorrectName, setInCorrectName] = useState(false);\n    const [showQty, setShowQty] = useState(false);\n    const [showStatus, setShowStatus] = useState(false);\n    const [validStatuses, setValidStatuses] = useState([]);\n\n    const auth = useSelector(state => state.auth);\n\n    useEffect(() => {\n        fetchProductNames(_.map(productsToBeDelivered, \"productId\"));\n        onClickStatus(props.order.status);\n    }, []);\n\n    const fetchProduct = (name) => {\n        productApis.fetchProductByName(auth.userId, auth.token, name)\n            .then(response => {\n                if (response) {\n                    setInCorrectName(false);\n                    setProduct(response);\n                } else {\n                    setInCorrectName(true);\n                }\n            });\n    };\n\n    const onNameChange = event => {\n        setProductName(event.target.value);\n        fetchProduct(event.target.value);\n    }\n\n    const onClickCancel = () => {\n        document.getElementById(\"orders-page\").style.pointerEvents = \"auto\";\n        document.getElementById(\"orders-page\").style.opacity = \"1\";\n        dispatch(toggleEditOrderModal());\n    }\n\n    const fetchProductNames = (productIds) => {\n        productApis.fetchProductNames(auth.userId, auth.token, productIds)\n            .then(response => {\n                if (response) setProductNameMapper(response);\n            })\n    }\n\n    const onQuantityClick = (quantity) => {\n        setQty(quantity);\n        setShowQty(false);\n    }\n\n    // const addProduct = () => {\n    //     let obj = _.clone(productsToBeDelivered);\n    //     if (obj[product._id]) {\n    //         obj[product._id][qty] = count;\n    //     } else {\n    //         obj[product._id] = {\n    //             [qty]: count\n    //         };\n    //     }\n    //     setProductName(\"\");\n    //     setCount(0);\n    //     setQty(\"\");\n    //     setProductsToBeDelivered(obj);\n    // };\n\n    const onSave = () => {\n        let body = {\n            productsToBeDelivered: [productsToBeDelivered],\n            status: status,\n            slot: slot\n        };\n        let updatedOrder = {\n            ...props.order,\n            productsToBeDelivered: [productsToBeDelivered],\n            status: status,\n            slot: slot\n        }\n        orderApis.editOrder(auth.userId, auth.token, props.order._id, body)\n            .then(response => {\n                document.getElementById(\"orders-page\").style.pointerEvents = \"auto\";\n                document.getElementById(\"orders-page\").style.opacity = \"1\";\n                dispatch(editOrder(response));\n                dispatch(toggleEditOrderModal());\n            })\n    }\n\n    const onClickStatus = (sts) => {\n        setStatus(sts);\n        if(sts === \"placed\") setValidStatuses([\"dispatched\", \"cancelled\"]);\n        else if(sts === \"dispatched\") setValidStatuses([\"shipped\", \"cancelled\"]);\n        else if(sts === \"shipped\") setValidStatuses([\"delivered\", \"cancelled\"]);\n        else if(sts === \"delivered\" || sts === \"cancelled\") setValidStatuses([]);\n        setShowStatus(false);\n    }\n\n    return (\n        <div className=\"edit-order-modal w3-animate-zoom \">\n            <div className=\"edit-order-bg\">\n                <div className=\"add-product-inpt-container\">\n                    <div className=\"add-product-label\">Username</div>\n                    <input\n                        type=\"text\"\n                        className=\"inpt add-new-product-inpt\"\n                        value={props.order.userInfo.username}\n                    />\n                </div>\n\n                <div className=\"add-product-inpt-container\">\n                    <div className=\"add-product-label\">PhoneNumber</div>\n                    <input\n                        type=\"text\"\n                        className=\"inpt add-new-product-inpt\"\n                        value={props.order.userInfo.phoneNumber}\n                    />\n                </div>\n\n                <div className=\"add-product-inpt-container\">\n                    <div className=\"add-product-label\">Email</div>\n                    <input\n                        type=\"text\"\n                        className=\"inpt add-new-product-inpt\"\n                        value={props.order.userInfo.email}\n                    />\n                </div>\n\n                <div className=\"add-product-inpt-container\">\n                    <div className=\"add-product-label\">PaymentMode</div>\n                    <input\n                        type=\"text\"\n                        className=\"inpt add-new-product-inpt\"\n                        value={props.order.paymentMode}\n                    />\n                </div>\n\n                <div className=\"add-product-inpt-container\">\n                    <div className=\"add-product-label\">Amount</div>\n                    <input\n                        type=\"text\"\n                        className=\"inpt add-new-product-inpt\"\n                        value={props.order.cart.amount}\n                    />\n                </div>\n\n                <div className=\"add-product-inpt-container\">\n                    <div className=\"add-product-label\">Time</div>\n                    <input\n                        type=\"text\"\n                        className=\"inpt add-new-product-inpt\"\n                        value={moment(props.order.time).format(\"LL\")}\n                    />\n                </div>\n\n                <div className=\"add-product-inpt-container\">\n                    <div className=\"add-product-label\">DeliveryType</div>\n                    <input\n                        type=\"text\"\n                        className=\"inpt add-new-product-inpt\"\n                        value={props.order.cart.deliveryType}\n                    />\n                </div>\n\n                <div className=\"add-product-inpt-container\">\n                    <div className=\"add-product-label\">Slot</div>\n                    <input\n                        type=\"text\"\n                        className=\"inpt add-new-product-inpt\"\n                        value={slot}\n                        onChange={e => setSlot(e.target.value)}\n                    />\n                </div>\n\n                <div className=\"add-product-inpt-container\">\n                    <div className=\"add-product-label\">Address</div>\n                    <input\n                        type=\"text\"\n                        className=\"inpt add-new-product-inpt edit-order-address-text\"\n                        value={`${props.order.deliveryAddress.HnoStreet}, ${props.order.deliveryAddress.cs}, ${props.order.deliveryAddress.pincode}, ${props.order.deliveryAddress.landmark}`}\n                    />\n                </div>\n\n                <div className=\"add-product-inpt-container\">\n                    <div className=\"add-product-label\">Status</div>\n                    <input\n                        type=\"text\"\n                        className=\"inpt add-new-product-inpt\"\n                        value={status}\n                        onFocus={() => setShowStatus(true)}\n                    />\n                    {\n                        showStatus ?\n                            <div className=\"filter-select-bg add-quantity-select-bg order-status-bg\">\n                                {\n                                    validStatuses.map(sts => {\n                                        return <ul className=\"filter-select-ele\" onClick={() => onClickStatus(sts)}>{sts}</ul>\n                                    })\n                                }\n                                <ul className=\"filter-select-ele\" onClick={() => setShowStatus(false)}>cancel</ul>\n                            </div>\n                            :\n                            <React.Fragment />\n                    }\n                </div>\n\n                {\n                    props.order.cart.deliveryType === \"multiple\" ?\n                        <React.Fragment>\n                            <div className=\"add-product-inpt-container\">\n                                <div className=\"add-product-label\">Frequency</div>\n                                <input\n                                    type=\"text\"\n                                    className=\"inpt add-new-product-inpt\"\n                                    value={props.order.cart.frequency}\n                                />\n                            </div>\n\n                            <div className=\"add-product-inpt-container\">\n                                <div className=\"add-product-label\">From</div>\n                                <input\n                                    type=\"text\"\n                                    className=\"inpt add-new-product-inpt\"\n                                    value={moment(props.order.cart.from).format(\"LL\")}\n                                />\n                            </div>\n\n                            <div className=\"add-product-inpt-container\">\n                                <div className=\"add-product-label\">To</div>\n                                <input\n                                    type=\"text\"\n                                    className=\"inpt add-new-product-inpt\"\n                                    value={moment(props.order.cart.to).format(\"LL\")}\n                                />\n                            </div>\n                            <div className=\"add-product-inpt-container\">\n                                <div className=\"add-product-label\">NextDeliveryDate</div>\n                                <input\n                                    type=\"text\"\n                                    className=\"inpt add-new-product-inpt\"\n                                    value={moment(props.order.nextDeliveryOn).format(\"LL\")}\n                                />\n                            </div>\n                        </React.Fragment>\n                        :\n                        \n\n                        <div className=\"add-product-inpt-container\">\n                            <div className=\"add-product-label\">DeliveryDate</div>\n                            <input\n                                type=\"text\"\n                                className=\"inpt add-new-product-inpt\"\n                                value={moment(props.order.cart.deliveryDate).format(\"LL\")}\n                            />\n                        </div>\n                }\n\n                <div className=\"quantity-bg\">\n                    <div className=\"add-product-inpt-container\">\n                        <div className=\"add-product-label\">Product</div>\n                        <input\n                            id=\"name\"\n                            type=\"text\"\n                            className=\"inpt add-new-product-inpt edit-order-inpt\"\n                            value={productName}\n                            onChange={onNameChange}\n                        />\n                    </div>\n                    <div className=\"add-product-inpt-container\">\n                        <div className=\"add-product-label\">Quantity</div>\n                        <input\n                            id=\"quantity\"\n                            type=\"text\"\n                            className=\"inpt add-new-product-inpt edit-order-inpt\"\n                            value={qty}\n                            onFocus={() => setShowQty(true)}\n                        />\n                        {\n                            !inCorrectName && showQty && product.quantity && product.quantity.length > 0 ?\n                                <div className=\"filter-select-bg add-quantity-select-bg\">\n                                    {\n                                        product.quantity.map(quantity => {\n                                            return <ul className=\"filter-select-ele\" onClick={() => onQuantityClick(quantity.value)}>{quantity.value}</ul>\n                                        })\n                                    }\n                                    <ul className=\"filter-select-ele\" onClick={() => onQuantityClick(\"\")}>cancel</ul>\n                                </div>\n                                :\n                                <React.Fragment />\n                        }\n                    </div>\n                    <div className=\"add-product-inpt-container\">\n                        <div className=\"add-product-label\">Count</div>\n                        <input\n                            id=\"count\"\n                            type=\"text\"\n                            className=\"inpt add-new-product-inpt edit-order-inpt\"\n                            value={count}\n                            onChange={event => setCount(event.target.value)}\n                        />\n                    </div>\n                    {/* <div className=\"add-product-inpt-container\">\n                        {!inCorrectName ?\n                            <button className=\"btn add-new-product-btn add-btn\" onClick={() => addProduct()}>ADD</button>\n                            :\n                            <div />\n                        }\n                    </div> */}\n                </div>\n                {\n                    inCorrectName ? <div className=\"add-product-inpt-container name-warning\">InCorrectName</div> : <div />\n                }\n\n                <div className=\"quantity-bg\">\n                    {\n                        props.order.cart.products.map(product => {\n                            return (\n                                <div>\n                                    <div className=\"add-product-inpt-container\">\n                                        <div className=\"add-product-label\">Product</div>\n                                        <input\n                                            type=\"text\"\n                                            className=\"inpt add-new-product-inpt edit-order-inpt\"\n                                            value={productNameMapper[product.productId]}\n                                        />\n                                    </div>\n                                    <div className=\"add-product-inpt-container\">\n                                        <div className=\"add-product-label\">Quantity</div>\n                                        <input\n                                            type=\"text\"\n                                            className=\"inpt add-new-product-inpt edit-order-inpt\"\n                                            value={product.quantity}\n                                        />\n                                    </div>\n                                    <div className=\"add-product-inpt-container\">\n                                        <div className=\"add-product-label\">Count</div>\n                                        <input\n                                            type=\"text\"\n                                            className=\"inpt add-new-product-inpt edit-order-inpt\"\n                                            value={product.count}\n                                        />\n                                    </div>\n                                    {/* <div className=\"add-product-inpt-container\">\n                                        <button className=\"btn add-new-product-btn add-btn\" onClick={() => deleteProduct(key, qty)}>DEL</button>\n                                    </div> */}\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n            <div className=\"add-product-inpt-container\">\n                <button onClick={() => onClickCancel()} className=\"btn add-new-product-btn\">Cancel</button>\n            </div>\n            <div className=\"add-product-inpt-container\">\n                <button onClick={() => onSave()} className=\"btn add-new-product-btn\">Save</button>\n            </div>\n        </div>\n    );\n};\n\nexport default EditOrder;\n","import React, { useState, useEffect } from \"react\";\nimport apis from \"../APICalls\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleEditOrderModal, setOrders } from \"../ReduxStore/Actions\";\nimport EditOrder from \"./EditOrder\";\n\nconst moment = require(\"moment\");\nconst orderApis = apis.orderApis();\n\nconst Orders = props => {\n    const auth = useSelector(state => state.auth);\n    const dispatch = useDispatch();\n    const [loader, setLoader] = useState(false);\n    const [seletedOrder, setSelectedOrder] = useState({});\n    const [filter, setFilter] = useState({\n        status: \"\",\n        from: \"\",\n        to: \"\",\n        type: \"\",\n        userId: \"\"\n    });\n    const [showStatus, setShowStatus] = useState(false);\n    const [showType, setShowType] = useState(false);\n    const orders = useSelector(state => state.orders.orders);\n\n    const editOrderModalOpen = useSelector(state => state.toggler.editOrderModal);\n\n    const fetchOrders = () => {\n        setLoader(true);\n        orderApis.getOrders(auth.userId, auth.token, filter)\n            .then((res) => {\n                setLoader(false);\n                dispatch(setOrders(res));\n            });\n    };\n\n    const onClickOrder = (order) => {\n        document.getElementById(\"orders-page\").style.pointerEvents = \"none\";\n        document.getElementById(\"orders-page\").style.opacity = \"0.2\";\n        setSelectedOrder(order);\n        dispatch(toggleEditOrderModal());\n    };\n\n    const onFromChange = event => {\n        setFilter({\n            ...filter,\n            from: event.target.value\n        });\n    }\n\n    const onToChange = event => {\n        setFilter({\n            ...filter,\n            to: event.target.value\n        });\n    }\n\n    const onTypeChange = event => {\n        setFilter({\n            ...filter,\n            type: event.target.value\n        });\n    }\n\n    const onStatusChange = event => {\n        setFilter({\n            ...filter,\n            status: event.target.value\n        });\n    }\n\n    const onUserIdChange = event => {\n        setFilter({\n            ...filter,\n            userId: event.target.value\n        });\n    };\n\n    const onClickStatus = (sts) => {\n        setFilter({\n            ...filter,\n            status: sts\n        });\n        setShowStatus(false);\n    }\n\n    const onClickType = (type) => {\n        setFilter({\n            ...filter,\n            type: type\n        });\n        setShowType(false);\n    }\n\n    useEffect(() => {\n        fetchOrders();\n    }, []);\n\n    return (\n        <React.Fragment>\n            <div className=\"orders-bg\">\n                {\n                    loader ? <p className=\"loader\">LOADING...</p>\n                        :\n                        orders && orders.length > 0\n                            ?\n                            <div>\n                                {\n                                    (() => {\n                                        if (editOrderModalOpen) {\n                                            return <EditOrder order={seletedOrder} />\n                                        }\n                                    })()\n                                }\n                                <div id=\"orders-page\">\n                                    {\n                                        orders.map(order => {\n                                            return (\n                                                <div className=\"order-card\" onClick={() => onClickOrder(order)}>\n                                                    <div className=\"order-text\">{order._id.toUpperCase()}</div>\n                                                    {\n                                                        (() => {\n                                                            if (order.status === \"placed\") {\n                                                                return (\n                                                                    <div>\n                                                                        <div className=\"order-text status-text-placed\">{order.status.toUpperCase()}</div>\n                                                                        <progress className=\"order-status\" max=\"100\" value=\"25\"></progress>\n                                                                    </div>\n                                                                )\n                                                            } else if (order.status === \"dispatched\") {\n                                                                return (\n                                                                    <div>\n                                                                        <div className=\"order-text status-text-dispatched\">{order.status.toUpperCase()}</div>\n                                                                        <progress className=\"order-status\" max=\"100\" value=\"50\"></progress>\n                                                                    </div>\n                                                                )\n                                                            } else if (order.status === \"shipped\") {\n                                                                return (\n                                                                    <div>\n                                                                        <div className=\"order-text status-text-shipped\">{order.status.toUpperCase()}</div>\n                                                                        <progress className=\"order-status\" max=\"100\" value=\"75\"></progress>\n                                                                    </div>\n                                                                )\n                                                            } else if (order.status === \"delivered\") {\n                                                                return (\n                                                                    <div>\n                                                                        <div className=\"order-text status-text-delivered\">{order.status.toUpperCase()}</div>\n                                                                        <progress className=\"order-status\" max=\"100\" value=\"100\"></progress>\n                                                                    </div>\n                                                                )\n                                                            } else if (order.status === \"cancelled\") {\n                                                                return (\n                                                                    <div>\n                                                                        <div className=\"order-text status-text-cancelled\">{order.status.toUpperCase()}</div>\n                                                                        <progress className=\"order-status\" max=\"100\" value=\"0\"></progress>\n                                                                    </div>\n                                                                )\n                                                            }\n                                                        })()\n                                                    }\n                                                    <div className=\"order-text order-status-text-time\">{moment(order.time).format('MMMM Do YYYY, h:mm:ss a')}</div>\n                                                </div>\n                                            )\n                                        })\n                                    }\n                                </div>\n                            </div>\n                            :\n                            <div> NO ORDERS </div>\n                }\n            </div>\n            <div className=\"actions-bg-order\">\n                <div className=\"filter-label\">From</div>\n                <input\n                    type=\"Date\"\n                    value={filter.from}\n                    className=\"inpt filter-inpt order-filter-inpt\"\n                    onChange={onFromChange}\n                />\n\n                <div className=\"filter-label\">To</div>\n                <input\n                    type=\"Date\"\n                    value={filter.to}\n                    className=\"inpt filter-inpt order-filter-inpt\"\n                    onChange={onToChange}\n                />\n\n                <div className=\"filter-label\">Status</div>\n                <input\n                    type=\"text\"\n                    value={filter.status}\n                    className=\"inpt filter-inpt order-filter-inpt\"\n                    onFocus={() => setShowStatus(true)}\n                />\n                {\n                    showStatus ?\n                        <div className=\"filter-select-bg add-quantity-select-bg\">\n                            {\n                                [\"placed\", \"dispatched\", \"shipped\", \"delivered\", \"cancelled\", \"all\"].map(sts => {\n                                    return <ul className=\"filter-select-ele\" onClick={() => onClickStatus(sts)}>{sts}</ul>\n                                })\n                            }\n                            <ul className=\"filter-select-ele\" onClick={() => setShowStatus(false)}>cancel</ul>\n                        </div>\n                        :\n                        <React.Fragment />\n                }\n\n                <div className=\"filter-label\">UserId</div>\n                <input\n                    type=\"text\"\n                    value={filter.userId}\n                    className=\"inpt filter-inpt order-filter-inpt\"\n                    onChange={onUserIdChange}\n                />\n\n                <div className=\"filter-label\">Type</div>\n                <input\n                    type=\"text\"\n                    value={filter.type}\n                    className=\"inpt filter-inpt order-filter-inpt\"\n                    onFocus={() => setShowType(true)}\n                />\n                {\n                    showType ?\n                    <div className=\"filter-select-bg add-quantity-select-bg\">\n                        {\n                            [\"multiple\", \"single\", \"both\"].map(sts => {\n                                return <ul className=\"filter-select-ele\" onClick={() => onClickType(sts)}>{sts}</ul>\n                            })\n                        }\n                        <ul className=\"filter-select-ele\" onClick={() => setShowType(false)}>cancel</ul>\n                    </div>\n                    :\n                    <React.Fragment />\n                }\n\n                <button className=\"filter-btn order-filter-btn\" onClick={() => fetchOrders()}>\n                    Filter\n                    </button>\n            </div>\n        </React.Fragment>\n    )\n};\n\nexport default Orders;","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleAddOfferModal } from \"../ReduxStore/Actions\";\nimport apis from \"../APICalls\";\n\nconst uploadApis = apis.uploadApis();\nconst offerApis = apis.offerApis();\n\nconst AddOffer = props => {\n    const dispatch = useDispatch();\n    const auth = useSelector(state => state.auth);\n    const categories = useSelector(state => state.categories.categories);\n\n    const [name, setName] = useState(\"\");\n    const [isExpired, setIsExpired] = useState(false);\n    const [category, setCategory] = useState(\"\");\n    const [showCategories, setShowCategories] = useState(false);\n    const [pic, setPic] = useState(\"\");\n    const [offerValue, setOfferValue] = useState(\"\");\n    const [isFileLoaded, setIsFileLoaded] = useState(true);\n    const [fileName, setFileName] = useState(\"\");\n\n    const onClickCancel = () => {\n        document.getElementById(\"offer-page\").style.pointerEvents = \"auto\";\n        document.getElementById(\"offer-page\").style.opacity = 1;\n        dispatch(toggleAddOfferModal());\n    };\n\n    const getCategoryId = (name) => {\n        let id = \"\";\n        categories.forEach(cat => {\n            if (cat.name === name) {\n                id = cat._id;\n            }\n        });\n        return id;\n    };\n\n    const onChangePic = event => {\n        setIsFileLoaded(false);\n        event.preventDefault();\n        let data = new FormData();\n        setFileName(event.target.value);\n        data.append(\"image\", event.target.files[0]);\n        uploadApis.uploadFile(auth.userId, auth.token, data)\n            .then(response => {\n                if (response) {\n                    setIsFileLoaded(true);\n                    setPic(response.Location);\n                }\n            })\n    }\n\n    const onCategoryClick = (cat) => {\n        setCategory(cat);\n        setShowCategories(false);\n    };\n\n    const onSubmit = () => {\n        let body = {\n            name,\n            offerValue,\n            isExpired,\n            pic,\n            category: getCategoryId(category)\n        };\n\n        offerApis.addOffer(auth.userId, auth.token, body)\n        .then(() => {\n            onClickCancel();\n        })\n     };\n\n\n    return (\n        <React.Fragment>\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">Name</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt add-category-inpt\"\n                    value={name}\n                    onChange={event => setName(event.target.value)}\n                />\n            </div>\n            <div className=\"add-product-inpt-container file-container\">\n                <label for=\"file-upload\" class=\"custom-file-upload\">\n                    Upload Pic\n                            </label>\n                <input\n                    type=\"file\"\n                    id=\"file-upload\"\n                    onChange={onChangePic}\n                />\n                <input\n                    type=\"text\"\n                    className=\"inpt file-upload-inpt\"\n                    value={fileName}\n                />\n            </div>\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">IsExpired</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt add-category-inpt\"\n                    value={isExpired}\n                    onChange={event => setIsExpired(event.target.value)}\n                />\n            </div>\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">OfferValue</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt add-category-inpt\"\n                    value={offerValue}\n                    onChange={event => setOfferValue(event.target.value)}\n                />\n            </div>\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">Category</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt add-category-inpt\"\n                    value={category}\n                    onFocus={() => setShowCategories(true)}\n                />\n                {\n                    showCategories && categories && categories.length > 0 ?\n                        <div className=\"filter-select-bg add-category-select-bg\">\n                            <ul className=\"filter-select-ele\" onClick={() => setShowCategories(false)}>none</ul>\n                            {\n                                categories.map(cate => {\n                                    return <ul className=\"filter-select-ele\" onClick={() => onCategoryClick(cate.name)}>{cate.name}</ul>\n                                })\n                            }\n                        </div>\n                        :\n                        <React.Fragment />\n                }\n            </div>\n            \n            <div className=\"add-product-inpt-container\">\n                <button onClick={() => onClickCancel()} className=\"btn add-new-product-btn\">Cancel</button>\n            </div>\n\n            <div className=\"add-product-inpt-container\">\n                <button onClick={() => onSubmit()} className=\"btn add-new-product-btn\">Save</button>\n            </div>\n        </React.Fragment>\n    )\n};\n\nexport default AddOffer;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleEditOfferModal } from \"../ReduxStore/Actions\";\nimport apis from \"../APICalls\";\n\nconst uploadApis = apis.uploadApis();\nconst offerApis = apis.offerApis();\n\nconst EditOffer = props => {\n    const dispatch = useDispatch();\n    const auth = useSelector(state => state.auth);\n    const categories = useSelector(state => state.categories.categories);\n\n    const getCategoryName = (id) => {\n        let name = \"\";\n        categories.forEach(cat => {\n            if (cat._id === id) name = cat.name;\n        });\n        return name;\n    };\n\n    const [name, setName] = useState(props.offer.name);\n    const [isExpired, setIsExpired] = useState(props.offer.isExpired);\n    const [category, setCategory] = useState(getCategoryName(props.offer.category));\n    const [showCategories, setShowCategories] = useState(false);\n    const [pic, setPic] = useState(props.offer.pic);\n    const [offerValue, setOfferValue] = useState(props.offer.offerValue);\n    const [isFileLoaded, setIsFileLoaded] = useState(true);\n    const [fileName, setFileName] = useState(\"\");\n\n    const onClickCancel = () => {\n        document.getElementById(\"offer-page\").style.pointerEvents = \"auto\";\n        document.getElementById(\"offer-page\").style.opacity = 1;\n        dispatch(toggleEditOfferModal());\n    };\n\n    const deleteOffer = () => {\n        offerApis.deleteOffer(auth.userId, auth.token, props.offer._id)\n        .then(() => {\n            onClickCancel();\n        })\n    }\n\n    const getCategoryId = (name) => {\n        let id = \"\";\n        categories.forEach(cat => {\n            if (cat.name === name) {\n                id = cat._id;\n            }\n        });\n        return id;\n    };\n\n    const onChangePic = event => {\n        setIsFileLoaded(false);\n        event.preventDefault();\n        let data = new FormData();\n        setFileName(event.target.value);\n        data.append(\"image\", event.target.files[0]);\n        uploadApis.uploadFile(auth.userId, auth.token, data)\n            .then(response => {\n                if (response) {\n                    setIsFileLoaded(true);\n                    setPic(response.Location);\n                }\n            })\n    }\n\n    const onCategoryClick = (cat) => {\n        setCategory(cat);\n        setShowCategories(false);\n    };\n\n    const onSubmit = () => {\n        let body = {\n            name,\n            offerValue,\n            isExpired,\n            pic,\n            category: getCategoryId(category)\n        };\n\n        offerApis.editOffer(auth.userId, auth.token, props.offer._id, body)\n        .then(() => {\n            onClickCancel();\n        })\n     };\n\n\n    return (\n        <React.Fragment>\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">Name</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt add-category-inpt\"\n                    value={name}\n                    onChange={event => setName(event.target.value)}\n                />\n            </div>\n            <div className=\"add-product-inpt-container file-container\">\n                <label for=\"file-upload\" class=\"custom-file-upload\">\n                    Upload Pic\n                            </label>\n                <input\n                    type=\"file\"\n                    id=\"file-upload\"\n                    onChange={onChangePic}\n                />\n                <input\n                    type=\"text\"\n                    className=\"inpt file-upload-inpt\"\n                    value={fileName}\n                />\n            </div>\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">IsExpired</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt add-category-inpt\"\n                    value={isExpired}\n                    onChange={event => setIsExpired(event.target.value)}\n                />\n            </div>\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">OfferValue</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt add-category-inpt\"\n                    value={offerValue}\n                    onChange={event => setOfferValue(event.target.value)}\n                />\n            </div>\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">Category</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt add-category-inpt\"\n                    value={category}\n                    onFocus={() => setShowCategories(true)}\n                />\n                {\n                    showCategories && categories && categories.length > 0 ?\n                        <div className=\"filter-select-bg add-category-select-bg\">\n                            <ul className=\"filter-select-ele\" onClick={() => setShowCategories(false)}>none</ul>\n                            {\n                                categories.map(cate => {\n                                    return <ul className=\"filter-select-ele\" onClick={() => onCategoryClick(cate.name)}>{cate.name}</ul>\n                                })\n                            }\n                        </div>\n                        :\n                        <React.Fragment />\n                }\n            </div>\n            \n            <div className=\"add-product-inpt-container\">\n                <button onClick={() => onClickCancel()} className=\"btn add-new-product-btn\">Cancel</button>\n            </div>\n\n            <div className=\"add-product-inpt-container\">\n                <button onClick={() => onSubmit()} className=\"btn add-new-product-btn\">Save</button>\n            </div>\n\n            <div className=\"add-product-inpt-container\">\n                <button onClick={() => deleteOffer()} className=\"btn add-new-product-btn\">Delete</button>\n            </div>\n        </React.Fragment>\n    )\n};\n\nexport default EditOffer;","import React, { useState, useEffect } from \"react\";\nimport apis from \"../APICalls\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleAddOfferModal, toggleEditOfferModal } from \"../ReduxStore/Actions\";\nimport AddOffer from \"./AddOffer\";\nimport EditOffer from \"./EditOffer\";\n\nconst offerApis = apis.offerApis();\n\nconst Offers = props => {\n    const auth = useSelector(state => state.auth);\n    const addOfferModal = useSelector(state => state.toggler.addOfferModal);\n    const editOfferModal = useSelector(state => state.toggler.editOfferModal);\n    const dispatch = useDispatch();\n    const [loader, setLoader] = useState(false);\n    const [offers, setOffers] = useState([]);\n    const [offer, setOffer] = useState({});\n\n    const fetchOffers = () => {\n        offerApis.getOffers(auth.userId, auth.token)\n            .then(response => {\n                if (response) setOffers(response);\n            });\n    };\n\n    const onClickAddOffer = () => {\n        document.getElementById(\"offer-page\").style.pointerEvents = \"none\";\n        document.getElementById(\"offer-page\").style.opacity = 0.2;\n        dispatch(toggleAddOfferModal());\n    };\n\n    const onClickOffer = offer => {\n        document.getElementById(\"offer-page\").style.pointerEvents = \"none\";\n        document.getElementById(\"offer-page\").style.opacity = 0.2;\n        setOffer(offer);\n        dispatch(toggleEditOfferModal());\n    };\n\n    useEffect(() => {\n        fetchOffers();\n    }, []);\n\n    return (\n        <React.Fragment>\n            {\n                loader ? <p className=\"loader\">LOADING...</p>\n                    :\n                    <React.Fragment>\n                        {\n                            (() => {\n                                if (addOfferModal) {\n                                    return (\n                                        <div className=\"add-category-modal add-offer-modal w3-animate-zoom\">\n                                            <div className=\"add-category-bg\">\n                                                <div className=\"add-product-title-bg\">\n                                                    <p className=\"modal-title\">ADD OFFER</p>\n                                                </div>\n                                                <AddOffer/>\n                                            </div>\n                                        </div>\n                                    )\n                                } else if(editOfferModal) {\n                                    return (\n                                        <div className=\"add-category-modal add-offer-modal w3-animate-zoom\">\n                                            <div className=\"add-category-bg\">\n                                                <div className=\"add-product-title-bg\">\n                                                    <p className=\"modal-title\">ADD OFFER</p>\n                                                </div>\n                                                <EditOffer offer={offer}/>\n                                            </div>\n                                        </div>\n                                    )\n                                }\n                            })()\n                        }\n                        <div id=\"offer-page\">\n                            <div className=\"category-bg\">\n                                {\n                                    offers.map(offer => {\n                                        return (\n                                            <div className=\"category-card  offer-card\" onClick = {() => onClickOffer(offer)}>\n                                                <img src={offer.pic} className=\"category-img offer-img\" />\n                                                <div className=\"category-content offer-content\">\n                                                    <div className=\"category-name\">{offer.name}</div>\n                                                    <hr className=\"line\" />\n                                                    <div className=\"category-description\">{`${offer.offerValue}% off on the products availed`}</div>\n                                                </div>\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </div>\n                            <div className=\"category-action\">\n                                <div className=\"category-action-card\">\n                                    <button className=\"category-add-btn\" onClick={() => onClickAddOffer()}>ADD OFFER</button>\n                                    <br />\n                                    <div className=\"pro-tip\">\n                                        <img className=\"pro-tip-img\" src=\"https://cdn0.iconfinder.com/data/icons/ui-beast-6/32/UI-19-128.png\" />\n                                        <div className=\"category-description pro-tip-text\">\n                                            To create sub category add category to a category.\n                            </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </React.Fragment>\n            }\n        </React.Fragment>\n    )\n}\n\nexport default Offers;","import React, { useState, useEffect } from \"react\";\nimport apis from \"../APICalls\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleEditUser } from \"../ReduxStore/Actions\";\n\nconst userApis = apis.userApis();\n\nconst EditUser = props => {\n    const dispatch = useDispatch();\n    const [user, setUser] = useState(props.user);\n    const [money, setMoney] = useState(0);\n\n    const auth = useSelector(state => state.auth);\n\n    const onClickCancel = () => {\n        dispatch(toggleEditUser());\n    };\n\n    const addToWallet = () => {\n        userApis.addToWallet(auth.userId, auth.token, user._id, money)\n        .then(response => {\n            onClickCancel();\n        })\n    };\n\n    const onChangeMoney = event => setMoney(event.target.value);\n\n    return (\n        <React.Fragment>\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">UserName</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt\"\n                    value={user.username}\n                />\n            </div>\n\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">Email</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt\"\n                    value={user.email}\n                />\n            </div>\n\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">PhoneNumber</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt\"\n                    value={user.phoneNumber}\n                />\n            </div>\n\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">WalletAmount</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt\"\n                    value={user.walletAmount}\n                />\n            </div>\n\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">HNo</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt\"\n                    value={user.address.HnoStreet}\n                />\n            </div>\n\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">City and State</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt\"\n                    value={user.address.cs}\n                />\n            </div>\n\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">Pincode</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt\"\n                    value={user.address.pincode}\n                />\n            </div>\n\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">Landmark</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt\"\n                    value={user.address.landmark}\n                />\n            </div>\n\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">ReferalCode</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt\"\n                    value={user.referalCode}\n                />\n            </div>\n\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">AddToWallet</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt\"\n                    value={money}\n                    onChange={onChangeMoney}\n                />\n            </div>\n\n            <div className=\"add-product-inpt-container edit-user-container\">\n                <button onClick={() => addToWallet()} className=\"btn add-new-product-btn\">Add</button>\n            </div>\n\n            <div className=\"add-product-inpt-container edit-user-container\">\n                <button onClick={() => onClickCancel()} className=\"btn add-new-product-btn\">Cancel</button>\n            </div>\n\n        </React.Fragment>\n    )\n};\n\nexport default EditUser;","import React, { useState, useEffect } from \"react\";\nimport apis from \"../APICalls\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleEditUser } from \"../ReduxStore/Actions\";\nimport EditUser from \"./EditUser\";\n\nconst userApis = apis.userApis();\n\nconst Users = props => {\n\n    const dispatch = useDispatch();\n    const auth = useSelector(state => state.auth);\n    const [users, setUsers] = useState([]);\n    const [loader, setLoader] = useState(false);\n    const [filter, setFilter] = useState({\n        email: \"\",\n        username: \"\",\n        phoneNumber: \"\",\n        membership: \"\"\n    });\n    const [showMembership, setShowMembership] = useState(false);\n    const [seletedUser, setSelectedUser] = useState({});\n\n    const editUserModal = useSelector(state => state.toggler.editUserModal);\n\n    const fetchUsers = () => {\n        setLoader(true);\n        userApis.getUsers(auth.userId, auth.token, filter)\n            .then(response => {\n                setLoader(false);\n                setUsers(response);\n            });\n    };\n\n    const onClickUser = (user) => {\n        setSelectedUser(user);\n        dispatch(toggleEditUser())\n    };\n\n    const onClickMembership = (mem) => {\n        setFilter({\n            ...filter,\n            membership: mem\n        });\n        setShowMembership(false);\n    }\n\n    const onEmailChange = event => setFilter({\n        ...filter,\n        email: event.target.value\n    });\n\n    const onUsernameChange = event => setFilter({\n        ...filter,\n        username: event.target.value\n    });\n\n    const onPhoneNumberChange = event => setFilter({\n        ...filter,\n        phoneNumber: event.target.value\n    })\n\n    useEffect(() => {\n        fetchUsers();\n    }, []);\n\n    return (\n        <React.Fragment>\n            {\n                loader ? <p className=\"loader\">LOADING...</p>\n                    :\n                    <div className=\"orders-bg\">\n                        {\n                            (() => {\n                                if(editUserModal) {\n                                    return (\n                                        <div className=\"add-product-modal w3-animate-zoom\">\n                                        <div className=\"add-new-product-bg\">\n                                            <div className = \"add-product-title-bg\">\n                                                <p className=\"modal-title\">USER</p>\n                                            </div>\n                                            <EditUser user={seletedUser}/>\n                                        </div>\n                                    </div>\n                                    );\n                                }\n                            })()\n                        }\n                        {\n                            users.map(user => {\n                                return (\n                                    <div className=\"order-card\" onClick={() => onClickUser(user)}>\n                                        <div className=\"order-text username-text\">{user.username.toUpperCase()}</div>\n                                        <div className=\"order-text email-text\">{user.email.toUpperCase()}</div>\n                                        <div className=\"order-text contactno-text\">{user.phoneNumber}</div>\n                                        <div className=\"order-text\">Rs {user.walletAmount}</div>\n                                        <div className=\"order-text status-text-placed membership-badge\">\n                                            {\n                                                user.membershipObtained ? \"PRIME MEMBER\" : \"NON PRIME MEMBER\"\n                                            }\n                                        </div>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n            }\n            <div className=\"actions-bg-order\">\n                <div className=\"filter-label\">Email</div>\n                <input\n                    type=\"text\"\n                    value={filter.email}\n                    className=\"inpt filter-inpt order-filter-inpt\"\n                    onChange={onEmailChange}\n                />\n\n                <div className=\"filter-label\">Username</div>\n                <input\n                    type=\"text\"\n                    value={filter.username}\n                    className=\"inpt filter-inpt order-filter-inpt\"\n                    onChange={onUsernameChange}\n                />\n\n                <div className=\"filter-label\">Phone Number</div>\n                <input\n                    type=\"text\"\n                    value={filter.phoneNumber}\n                    className=\"inpt filter-inpt order-filter-inpt\"\n                    onChange={onPhoneNumberChange}\n                />\n\n                <div className=\"filter-label\">membership</div>\n                <input\n                    type=\"text\"\n                    value={filter.membership}\n                    className=\"inpt filter-inpt order-filter-inpt\"\n                    onFocus={() => setShowMembership(true)}\n                />\n                {\n                    showMembership ?\n                        <div className=\"filter-select-bg add-quantity-select-bg\">\n                            {\n                                [\"prime\", \"non-prime\", \"both\"].map(sts => {\n                                    return <ul className=\"filter-select-ele\" onClick={() => onClickMembership(sts)}>{sts}</ul>\n                                })\n                            }\n                            <ul className=\"filter-select-ele\" onClick={() => setShowMembership(false)}>cancel</ul>\n                        </div>\n                        :\n                        <React.Fragment />\n                }\n\n                <button className=\"filter-btn order-filter-btn\" onClick={() => fetchUsers()}>\n                    Filter\n                    </button>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default Users;","import React, { useState, useEffect } from \"react\";\nimport apis from \"../APICalls\";\nimport { useDispatch, useSelector } from \"react-redux\";\nconst _ = require(\"lodash\");\n\nconst SeedData = (props) => {\n  const dispatch = useDispatch();\n  const auth = useSelector((state) => state.auth);\n  const seeddataApis = apis.seedataApis();\n\n  const [loader, setLoader] = useState(false);\n  const [parseFailed, setParseFailed] = useState(false);\n  const [membership, setMembership] = useState({});\n  const [FAQ, setFAQ] = useState({});\n  const [validpincodes, setValidPinCodes] = useState([]);\n  const [minimumcartvaluetouse, setMinimumcartvaluetouse] = useState(0);\n  const [deliveryCharges, setDeliveryCharges] = useState(0);\n  const [pincode, setPinCode] = useState(\"\");\n  const [termsandconditions, setTermsAndConditions] = useState(\"\");\n  const [aboutus, setAboutUs] = useState(\"\");\n  const [privacypolicy, setPrivacyPolicy] = useState(\"\");\n\n  useEffect(() => {\n    fetchSeedData();\n  }, []);\n\n  const fetchSeedData = () => {\n    setLoader(true);\n    seeddataApis.getSeedData(auth.userId, auth.token).then((response) => {\n      setLoader(false);\n      if (response) {\n        setMembership(JSON.stringify(response.membership, undefined, 4));\n        setFAQ(JSON.stringify(response.FAQ, undefined, 4));\n        setValidPinCodes(response.validpincodes);\n        setMinimumcartvaluetouse(\n          JSON.stringify(response.minimumcartvaluetouse)\n        );\n        setDeliveryCharges(JSON.stringify(response.deliveryCharges));\n        setAboutUs(JSON.stringify(response.aboutus, undefined, 4));\n        // setSupportInfo(JSON.stringify(response.supportinfo));\n        setPrivacyPolicy(JSON.stringify(response.privacypolicy, undefined, 4));\n        setTermsAndConditions(\n          JSON.stringify(response.termsandconditions, undefined, 4)\n        );\n      }\n    });\n  };\n\n  const editSeedData = () => {\n    let body = {};\n    try {\n      body = {\n        membership: JSON.parse(membership),\n        FAQ: JSON.parse(FAQ),\n        validpincodes: validpincodes,\n        minimumcartvaluetouse: JSON.parse(minimumcartvaluetouse),\n        deliveryCharges: JSON.parse(deliveryCharges),\n        aboutus: JSON.parse(aboutus),\n        privacypolicy: JSON.parse(privacypolicy),\n        termsandconditions: JSON.parse(termsandconditions),\n        // supportinfo: JSON.parse(supportinfo),\n      };\n    } catch (err) {\n      setParseFailed(true);\n    }\n    seeddataApis.editSeedData(auth.userId, auth.token, body).then((res) => {\n      window.alert(\"Seed Data Saved Successfully\");\n    });\n  };\n\n  const onMembershipChange = (event) => {\n    setMembership(event.target.value);\n  };\n\n  const onFAQChange = (event) => {\n    let obj;\n    setFAQ(event.target.value);\n  };\n\n  const onDeliveryChargesChange = (event) => {\n    let obj;\n    setDeliveryCharges(event.target.value);\n  };\n\n  const onMinimumCartValueToUseChange = (event) => {\n    let obj;\n    setMinimumcartvaluetouse(event.target.value);\n  };\n\n  const onPinCodeChange = (event) => {\n    setPinCode(event.target.value);\n  };\n\n  const onChangeAboutUs = (event) => {\n    setAboutUs(event.target.value);\n  };\n\n  const onChangePrivacyPolicy = (event) => {\n    setPrivacyPolicy(event.target.value);\n  };\n\n  //   const onChangeSupportInfo = (event) => {\n  //     setSupportInfo(event.target.value);\n  //   };\n\n  const onChangeTermsAndConditions = (event) => {\n    setTermsAndConditions(event.target.value);\n  };\n\n  const onCodChanged = (event, index) => {\n    let pincodes = _.clone(validpincodes);\n    pincodes[index].cod = !pincodes[index].cod;\n    setValidPinCodes(pincodes);\n  };\n\n  const addPinCode = () => {\n    let pincodes = _.clone(validpincodes);\n    let p = _.find(validpincodes, { pincode: pincode });\n    if (!p) {\n      pincodes.push({\n        pincode,\n        cod: false,\n      });\n      setValidPinCodes(pincodes);\n    }\n  };\n\n  const deletePinCode = (index) => {\n    let pincodes = _.clone(validpincodes);\n    _.remove(pincodes, { pincode: validpincodes[index].pincode });\n    setValidPinCodes(pincodes);\n  };\n\n  return (\n    <React.Fragment>\n      {loader ? (\n        <p className=\"loader\">LOADING...</p>\n      ) : (\n        <div className=\"seeddata-bg\">\n          <div className=\"seeddata-bg-1\">\n            <div className=\"seeddata-container\">\n              <div className=\"add-product-label seeddata-label\">\n                Membership Prices\n              </div>\n              <textarea\n                className=\"inpt add-new-product-inpt textarea\"\n                value={membership}\n                onChange={onMembershipChange}\n              />\n            </div>\n            <div className=\"seeddata-container\">\n              <div className=\"add-product-label seeddata-label\">\n                DeliveryCharges\n              </div>\n              <textarea\n                className=\"inpt add-new-product-inpt textarea\"\n                value={deliveryCharges}\n                onChange={onDeliveryChargesChange}\n              />\n            </div>\n            {/* <hr className=\"line\"/> */}\n            <div className=\"seeddata-container\">\n              <div className=\"add-product-label seeddata-label\">FAQ's</div>\n              <textarea\n                className=\"inpt add-new-product-inpt textarea\"\n                value={FAQ}\n                onChange={onFAQChange}\n              />\n            </div>\n            <div className=\"seeddata-container\">\n              <div className=\"add-product-label seeddata-label\">\n                Minimum Wallet Amount to use\n              </div>\n              <textarea\n                className=\"inpt add-new-product-inpt textarea\"\n                value={minimumcartvaluetouse}\n                onChange={onMinimumCartValueToUseChange}\n              />\n            </div>\n            {/* <div className=\"seeddata-container\">\n              <div className=\"add-product-label seeddata-label\">\n                Support Information\n              </div>\n              <textarea\n                className=\"inpt add-new-product-inpt seeddata-textarea\"\n                value={supportinfo}\n                onChange={onChangeSupportInfo}\n              />\n            </div> */}\n            <div className=\"seeddata-container\">\n              <div className=\"add-product-label seeddata-label\">\n                Terms and Conditions\n              </div>\n              <textarea\n                className=\"inpt add-new-product-inpt seeddata-textarea\"\n                value={termsandconditions}\n                onChange={onChangeTermsAndConditions}\n              />\n            </div>\n            <div className=\"seeddata-container\">\n              <div className=\"add-product-label seeddata-label\">About us</div>\n              <textarea\n                className=\"inpt add-new-product-inpt seeddata-textarea\"\n                value={aboutus}\n                onChange={onChangeAboutUs}\n              />\n            </div>\n\n            <div className=\"seeddata-container\">\n              <div className=\"add-product-label seeddata-label\">\n                Privacy Policy\n              </div>\n              <textarea\n                className=\"inpt add-new-product-inpt seeddata-textarea\"\n                value={privacypolicy}\n                onChange={onChangePrivacyPolicy}\n              />\n            </div>\n\n            <div className=\"seeddata-container\">\n              <button\n                onClick={() => editSeedData()}\n                className=\"btn add-new-product-btn\"\n              >\n                Save\n              </button>\n            </div>\n          </div>\n\n          <div className=\"seeddata-bg-2\">\n            <div className=\"seeddata-container\">\n              <div className=\"add-product-label seeddata-label\">PinCode</div>\n              <input\n                type=\"text\"\n                value={pincode}\n                placeholder=\"pincode\"\n                className=\"inpt add-new-product-inpt add-pin-code-inpt\"\n                onChange={onPinCodeChange}\n              />\n              <button\n                className=\"btn add-new-product-btn add-pin-code-btn\"\n                onClick={() => {\n                  addPinCode();\n                }}\n              >\n                ADD\n              </button>\n            </div>\n\n            {(() => {\n              if (Array.isArray(validpincodes) && validpincodes.length) {\n                return (\n                  <div className=\"cod-pincode-bg\">\n                    <div className=\"cod-pincode-heading-bg\">\n                      <div className=\"cod-pincode-heading\">PINCODE</div>\n                      <div className=\"cod-pincode-heading cod-heading\">\n                        Cash On Delivery\n                      </div>\n                    </div>\n                    <hr />\n                    {validpincodes.map((validpincode, index) => {\n                      return (\n                        <div className=\"cod-data-bg\">\n                          <div className=\"cod-pincode-data\">\n                            {validpincode.pincode}\n                          </div>\n                          <button\n                            className=\"btn add-new-product-btn del-pin-code-btn\"\n                            onClick={() => deletePinCode(index)}\n                          >\n                            DEL\n                          </button>\n                          <input\n                            type=\"checkbox\"\n                            checked={validpincode.cod}\n                            className=\"switch\"\n                            onChange={(event) => onCodChanged(event, index)}\n                          />\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              }\n            })()}\n          </div>\n\n          {/* <div className=\"seeddata-container\">\n                            <div className=\"add-product-label seeddata-label\">Pincodes valid for Delivery</div>\n                            <textarea\n                                className=\"inpt add-new-product-inpt seeddata-textarea\"\n                                value={validpincodes}\n                                onChange={onValidPinCodeChange}\n                            />\n                        </div> */}\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default SeedData;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleAddCouponModal, addCoupon } from \"../ReduxStore/Actions\";\nimport apis from \"../APICalls\";\n\nconst couponApis = apis.couponApis();\n\nconst AddCoupon = props => {\n    const dispatch = useDispatch();\n    const auth = useSelector(state => state.auth);\n\n    const [code, setCode] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [priceMoreThan, setProceMoreThan] = useState(0);\n    const [maximumDiscount, setMaximumDiscount] = useState(0);\n    const [discountPercent, setDiscountPercent] = useState(0);\n    \n    const onClickCancel = () => {\n        dispatch(toggleAddCouponModal());\n    };\n\n    const onSubmit = () => {\n        let body = {\n            code,\n            description,\n            restrictions: {\n                priceMoreThan,\n                maximumDiscount,\n                discountPercent\n            }\n        }\n        couponApis.addCoupon(auth.userId, auth.token, body)\n        .then(response => {\n            dispatch(addCoupon(response));\n        })\n        onClickCancel();\n    };\n\n    return (\n        <div>\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">Code</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt\"\n                    value={code}\n                    onChange={event => setCode(event.target.value)}\n                />\n            </div>\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">Description</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt\"\n                    value={description}\n                    onChange={event => setDescription(event.target.value)}\n                />\n            </div>\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">MinimumCartValue</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt\"\n                    value={priceMoreThan}\n                    onChange={event => setProceMoreThan(event.target.value)}\n                />\n            </div>\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">MaximumDiscount</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt\"\n                    value={maximumDiscount}\n                    onChange={event => setMaximumDiscount(event.target.value)}\n                />\n            </div>\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">Percent</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt\"\n                    value={discountPercent}\n                    onChange={event => setDiscountPercent(event.target.value)}\n                />\n            </div>\n            <div className=\"add-product-inpt-container edit-user-container\">\n                <button onClick={() => onClickCancel()} className=\"btn add-new-product-btn\">Cancel</button>\n            </div>\n\n            <div className=\"add-product-inpt-container edit-user-container\">\n                <button onClick={() => onSubmit()} className=\"btn add-new-product-btn\">Save</button>\n            </div>\n        </div>\n    )\n};\n\nexport default AddCoupon;","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleEditCouponModal, editCoupon, deleteCoupon } from \"../ReduxStore/Actions\";\nimport apis from \"../APICalls\";\n\nconst couponApis = apis.couponApis();\n\nconst AddCoupon = props => {\n    const dispatch = useDispatch();\n    const auth = useSelector(state => state.auth);\n\n    const [code, setCode] = useState(props.coupon.code);\n    const [description, setDescription] = useState(props.coupon.description);\n    const [priceMoreThan, setProceMoreThan] = useState(props.coupon.restrictions.priceMoreThan);\n    const [maximumDiscount, setMaximumDiscount] = useState(props.coupon.restrictions.maximumDiscount);\n    const [discountPercent, setDiscountPercent] = useState(props.coupon.restrictions.discountPercent);\n    \n    const onClickCancel = () => {\n        dispatch(toggleEditCouponModal());\n    };\n\n    const onSubmit = () => {\n        let body = {\n            code,\n            description,\n            restrictions: {\n                priceMoreThan,\n                maximumDiscount,\n                discountPercent\n            }\n        }\n        couponApis.editCoupon(auth.userId, auth.token, body, props.coupon._id)\n        .then(response => {\n            dispatch(editCoupon(response));\n        })\n        onClickCancel();\n    };\n\n    const onDelete = () => {\n        couponApis.deleteCoupon(auth.userId, auth.token, props.coupon._id)\n        .then(response => {\n            dispatch(deleteCoupon(props.coupon));\n        })\n        onClickCancel();\n    }\n\n    return (\n        <div>\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">Code</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt\"\n                    value={code}\n                    onChange={event => setCode(event.target.value)}\n                />\n            </div>\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">Description</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt\"\n                    value={description}\n                    onChange={event => setDescription(event.target.value)}\n                />\n            </div>\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">MinimumCartValue</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt\"\n                    value={priceMoreThan}\n                    onChange={event => setProceMoreThan(event.target.value)}\n                />\n            </div>\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">MaximumDiscount</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt\"\n                    value={maximumDiscount}\n                    onChange={event => setMaximumDiscount(event.target.value)}\n                />\n            </div>\n            <div className=\"add-product-inpt-container\">\n                <div className=\"add-product-label\">Percent</div>\n                <input\n                    type=\"text\"\n                    className=\"inpt add-new-product-inpt\"\n                    value={discountPercent}\n                    onChange={event => setDiscountPercent(event.target.value)}\n                />\n            </div>\n            <div className=\"add-product-inpt-container edit-user-container\">\n                <button onClick={() => onClickCancel()} className=\"btn add-new-product-btn\">Cancel</button>\n            </div>\n\n            <div className=\"add-product-inpt-container edit-user-container\">\n                <button onClick={() => onSubmit()} className=\"btn add-new-product-btn\">Save</button>\n            </div>\n\n            <div className=\"add-product-inpt-container edit-user-container\">\n                <button onClick={() => onDelete()} className=\"btn add-new-product-btn\">Del</button>\n            </div>\n        </div>\n    )\n};\n\nexport default AddCoupon;","import React, { useState, useEffect } from \"react\";\nimport apis from \"../APICalls\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCoupons, toggleAddCouponModal, toggleEditCouponModal } from \"../ReduxStore/Actions\";\nimport AddCoupon from \"./AddCoupon\";\nimport EditCoupon from \"./EditCoupon\";\n\nconst couponApis = apis.couponApis();\n\nconst Coupons = props => {\n    const auth = useSelector(state => state.auth);\n    const coupons = useSelector(state => state.coupons.coupons);\n    const addCouponModal = useSelector(state => state.toggler.addCouponModal);\n    const editCouponModal = useSelector(state => state.toggler.editCouponModal);\n    const dispatch = useDispatch();\n    const [loader, setLoader] = useState(false);\n    const [selectedCoupon, setSelectedCoupon] = useState({});\n\n    const fetchCoupons = () => {\n        setLoader(true);\n        couponApis.getCoupons(auth.userId, auth.token)\n            .then(response => {\n                setLoader(false);\n                dispatch(setCoupons(response));\n            });\n    };\n\n    const onClickAdd = () => {\n        dispatch(toggleAddCouponModal());\n    }\n\n    const onClickCoupon = (coupon) => {\n        setSelectedCoupon(coupon);\n        dispatch(toggleEditCouponModal());\n    }\n\n    useEffect(() => {\n        fetchCoupons();\n    }, []);\n\n    return (\n        <React.Fragment>\n            <div className=\"orders-bg coupons-bg\">\n            {\n                        (() => {\n                            if (addCouponModal) {\n                                return (\n                                    <div className=\"add-product-modal w3-animate-zoom\">\n                                        <div className=\"add-new-product-bg\">\n                                            <div className=\"add-product-title-bg\">\n                                                <p className=\"modal-title\">ADD COUPON</p>\n                                            </div>\n                                            <AddCoupon/>\n                                        </div>\n                                    </div>\n                                )\n                            } else if (editCouponModal) {\n                                return (\n                                    <div className=\"add-product-modal w3-animate-zoom\">\n                                        <div className=\"add-new-product-bg\">\n                                            <div className=\"add-product-title-bg\">\n                                                <p className=\"modal-title\">EDIT COUPON</p>\n                                            </div>\n                                        <EditCoupon coupon={selectedCoupon}/>\n                                        </div>\n                                    </div>\n                                )\n                            }\n                        })()\n                    }\n                {\n                    loader ? <p className=\"loader\">LOADING...</p>\n                        :\n                        coupons && coupons.length > 0\n                            ?\n                            <div>\n                                <div>\n                                    {\n                                        coupons.map(coupon => {\n                                            return (\n                                                <div className=\"order-card\" onClick={() => onClickCoupon(coupon)}>\n                                                    <div className=\"order-text coupon-text\">Code : {coupon.code.toUpperCase()}</div>\n                                                    <div className=\"order-text coupon-text\">Discount : {coupon.restrictions.discountPercent}%</div>\n                                                    <div className=\"order-text coupon-text\">MaxDiscount : {coupon.restrictions.maximumDiscount} Rs</div>\n                                                    <div className=\"order-text coupon-text\">Min Cart Value : {coupon.restrictions.priceMoreThan} Rs</div>\n                                                </div>\n                                            )\n                                        })\n                                    }\n                                </div>\n                            </div>\n                            :\n                            <div> NO COUPONS </div>\n                }\n            </div>\n\n            <div className=\"actions-bg-order\">\n                <button class=\"add-product-btn\" onClick={() => onClickAdd()}>\n                    Add New\n                </button>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default Coupons;","import React, { useState, useEffect } from \"react\";\nimport apis from \"../APICalls\";\nimport { useDispatch, useSelector } from \"react-redux\";\nconst _ = require(\"lodash\");\nconst uploadApis = apis.uploadApis();\n\nconst HomeScreenTemplate = props => {\n    const dispatch = useDispatch();\n    const auth = useSelector(state => state.auth);\n    const homeScreenTemplateApis = apis.seedataApis();\n    const [template, setTemplate] = useState([]);\n    const [fileName, setFileName] = useState(\"\");\n    const [pic, setPic] = useState(\"\");\n\n    const onChangePic = event => {\n        event.preventDefault();\n        let data = new FormData();\n        setFileName(event.target.value);\n        data.append(\"image\", event.target.files[0]);\n        uploadApis.uploadFile(auth.userId, auth.token, data)\n            .then(response => {\n                if (response) {\n                    setPic(response.Location);\n                }\n            })\n    }\n\n    useEffect(() => {\n        fetchHomeScreenTemplate();\n    }, []);\n\n    const fetchHomeScreenTemplate = () => {\n        homeScreenTemplateApis.getHomeScreenTemplate(auth.userId, auth.token)\n        .then(temp => {\n            if(temp) setTemplate(temp.template);\n        });\n    };\n\n    const saveTemplate = () => {\n        homeScreenTemplateApis.editHomeScreenTemplate(auth.userId, auth.token, {template});\n    };\n\n    return (\n        <React.Fragment>\n            <div className=\"hometemplate-bg\">\n                <div className=\"template-bg\">\n                    <textarea\n                        type=\"textarea\"\n                        value={JSON.stringify(template, undefined, 4)}\n                        className=\"inpt add-new-product-inpt hometemplate-textarea\"\n                        onChange={(event) => setTemplate(event.target.value)}\n                    />\n                    <button className=\"btn add-new-product-btn\" onClick={() => saveTemplate()}>SAVE</button>\n                </div>\n                <div className=\"upload-pic-bg\">\n                    <label for=\"file-upload\" class=\"custom-file-upload\">\n                        Upload Pic\n                    </label>\n                    <input\n                        type=\"file\"\n                        id=\"file-upload\"\n                        onChange={onChangePic}\n                    />\n                    <textarea\n                        type=\"text\"\n                        className=\"inpt add-new-product-inpt file-inpt1\"\n                        value={pic}\n                    />\n                    {\n                        pic && pic.length > 0? \n                            <img className=\"product-img uploaded-img\" src={pic} />\n                        :\n                            <div/>\n                    }\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default HomeScreenTemplate;","import React, { useState, useEffect } from \"react\";\nimport apis from \"../APICalls\";\nimport { useDispatch, useSelector } from \"react-redux\";\nconst _ = require(\"lodash\");\nconst uploadApis = apis.uploadApis();\n\nconst AdvanceHomeScreenTemplate = props => {\n    const dispatch = useDispatch();\n    const auth = useSelector(state => state.auth);\n    const homeScreenTemplateApis = apis.seedataApis();\n    const [template, setTemplate] = useState([]);\n    const [fileName, setFileName] = useState(\"\");\n    const [pic, setPic] = useState(\"\");\n\n    const onChangePic = event => {\n        event.preventDefault();\n        let data = new FormData();\n        setFileName(event.target.value);\n        data.append(\"image\", event.target.files[0]);\n        uploadApis.uploadFile(auth.userId, auth.token, data)\n            .then(response => {\n                if (response) {\n                    setPic(response.Location);\n                }\n            })\n    }\n\n    useEffect(() => {\n        fetchHomeScreenTemplate();\n    }, []);\n\n    const fetchHomeScreenTemplate = () => {\n        homeScreenTemplateApis.getHomeScreenTemplate(auth.userId, auth.token)\n        .then(temp => {\n            if(temp) setTemplate(temp.template);\n        });\n    };\n\n    const saveTemplate = () => {\n        homeScreenTemplateApis.editHomeScreenTemplate(auth.userId, auth.token, {template});\n    };\n\n    return (\n        <React.Fragment>\n            <div className=\"hometemplate-bg\">\n                <div className=\"template-bg ad-template-bg\">\n                    {\n                        template.map((temp, index) => {\n                            return <textarea\n                                value={JSON.stringify(temp, undefined, 4)}\n                                className=\"inpt add-new-product-inpt seeddata-textarea\"\n                            />\n                        })\n                    }\n                </div>\n                <div className=\"upload-pic-bg\">\n                    <label for=\"file-upload\" class=\"custom-file-upload\">\n                        Upload Pic\n                    </label>\n                    <input\n                        type=\"file\"\n                        id=\"file-upload\"\n                        onChange={onChangePic}\n                    />\n                    <textarea\n                        type=\"text\"\n                        className=\"inpt add-new-product-inpt file-inpt1\"\n                        value={pic}\n                    />\n                    {\n                        pic && pic.length > 0? \n                            <img className=\"product-img uploaded-img\" src={pic} />\n                        :\n                            <div/>\n                    }\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default AdvanceHomeScreenTemplate;","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport { loginAction } from \"../ReduxStore/Actions\";\nimport Header from \"./Header\";\nimport Products from './Products';\nimport Category from './Category';\nimport Order from './Order';\nimport Offers from './Offers';\nimport Users from './Users';\nimport SeedData from './SeedData';\nimport Coupons from './Coupon';\nimport HomeScreenTemplate from './HomeScreenTemplate';\nimport AdvanceHomeScreenTemplate from './AdvanceHomeScreenTemplate';\nconst config = require(\"../config/config.json\");\n\nconst Tab = (tab, props) => {\n    switch (tab) {\n        case \"products\":\n            return <Products {...props} />\n        case \"category\":\n            return <Category {...props} />\n        case \"offers\":\n            return <Offers {...props} />\n        case \"users\":\n            return <Users {...props} />\n        case \"coupons\":\n            return <Coupons {...props} />\n        case \"orders\":\n            return <Order {...props} />\n        case \"seeddata\":\n            return <SeedData {...props} />\n        case \"hometemplate\":\n            if(config.homescreenTemplate.advance.enable)\n                return <AdvanceHomeScreenTemplate {...props}/>\n            else\n                return <HomeScreenTemplate {...props} />\n    }\n}\n\nconst Home = props => {\n    let tab = useSelector(state => state.tab);\n    if (tab) tab = tab.value;\n    else tab = \"products\";\n    return (\n        <div>\n            <Header username=\"SaiKiran\" />\n            {Tab(tab, props)}\n        </div>\n    )\n}\n\nconst HomeHOC = props => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    let authInfo, token, userId, username;\n\n    authInfo = useSelector(state => state.auth);\n\n    useEffect(() => {\n        token = Cookies.get(\"token\");\n        userId = Cookies.get(\"userId\");\n        username = Cookies.get(\"username\");\n        if (userId) userId = JSON.parse(userId);\n        if (token) token = JSON.parse(token);\n        if (username) username = JSON.parse(username);\n        if (token && !authInfo.token) {\n            dispatch(loginAction({ token, userId, username }));\n        }\n    }, []);\n\n    return (\n        <div>\n            {\n                token || authInfo.token ? <Home auth={authInfo} /> : history.push(\"/login\")\n            }\n        </div>\n    )\n}\n\nexport default HomeHOC;","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport Login from \"./Components/Login\";\nimport HomeHOC from \"./Components/Home\";\n\nconst history = createBrowserHistory();\n\nfunction App() {\n  return (\n    <body>\n      <Router history={history} baseline=\"/index.html\">\n        <Switch>\n          <Route path=\"/home\" render={() => <HomeHOC />} />\n          <Route path=\"/login\" render={() => <Login />} />\n          <Route path=\"/\" render={() => <Redirect to=\"/home\" />}></Route>\n        </Switch>\n      </Router>\n    </body>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducer from './ReduxStore/Reducers';\nimport App from './App';\nimport \"./index.css\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}