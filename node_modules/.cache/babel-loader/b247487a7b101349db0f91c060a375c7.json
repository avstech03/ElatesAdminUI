{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akhil\\\\Desktop\\\\ElatesAdmin\\\\src\\\\Components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { loginAction } from \"../ReduxStore/Actions\";\nimport apis from \"../APICalls\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst authApis = apis.authApis();\n\nconst Login = props => {\n  _s();\n\n  const authInfo = useSelector(state => state.auth);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  if (authInfo.token) history.push(\"/home\");\n  useEffect(() => {\n    const token = Cookies.get(\"token\");\n    const user = Cookies.get(\"user\");\n\n    if (token && user) {\n      dispatch(loginAction({\n        token,\n        user\n      }));\n      history.push(\"/home\");\n    }\n  }, []);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLogginFailed, setIsLoginFailed] = useState(false);\n  const [failureMessage, setFailureMessage] = useState(\"\");\n\n  const changeUserName = event => {\n    setUsername(event.target.value);\n  };\n\n  const changePassword = event => {\n    setPassword(event.target.value);\n  };\n\n  const login = () => {\n    authApis.login({\n      username,\n      password\n    }).then(response => {\n      if (response) {\n        document.getElementById(\"username\").value = \"\";\n        document.getElementById(\"password\").value = \"\";\n\n        if (response.status === 200) {\n          setIsLoginFailed(false);\n          Cookies.set(\"token\", JSON.stringify(response.data.token), {\n            expires: 1\n          });\n          Cookies.set(\"userId\", JSON.stringify(response.data.user._id), {\n            expires: 1\n          });\n          Cookies.set(\"username\", JSON.stringify(response.data.user.username), {\n            expires: 1\n          });\n          dispatch(loginAction({\n            userId: response.data.user._id,\n            username: response.data.user.username,\n            token: response.data.token\n          }));\n          history.push(\"/home\");\n        } else {\n          setIsLoginFailed(true);\n          setFailureMessage(response.data.err);\n        }\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-brand\",\n          children: \"Elates Grocer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          placeholder: \"username\",\n          onChange: changeUserName,\n          value: username,\n          className: \"inpt login-usename-inpt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          placeholder: \"password\",\n          onChange: changePassword,\n          value: password,\n          className: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-btn\",\n          onClick: () => login(),\n          children: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-btn\",\n          onClick: () => history.push(\"/android\"),\n          children: \"Go To Downloader Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), isLogginFailed ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"failure-message\",\n          children: failureMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"by1LSEJZb3DP1lQ4jCQvvkasbVA=\", false, function () {\n  return [useSelector, useHistory, useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/akhil/Desktop/ElatesAdmin/src/Components/Login.js"],"names":["React","useState","useEffect","useSelector","useDispatch","useHistory","loginAction","apis","Cookies","authApis","Login","props","authInfo","state","auth","history","dispatch","token","push","get","user","username","setUsername","password","setPassword","isLogginFailed","setIsLoginFailed","failureMessage","setFailureMessage","changeUserName","event","target","value","changePassword","login","then","response","document","getElementById","status","set","JSON","stringify","data","expires","_id","userId","err"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,QAAQ,GAAGF,IAAI,CAACE,QAAL,EAAjB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAMC,QAAQ,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA5B;AACA,QAAMC,OAAO,GAAGV,UAAU,EAA1B;AACA,QAAMW,QAAQ,GAAGZ,WAAW,EAA5B;AAEA,MAAIQ,QAAQ,CAACK,KAAb,EAAoBF,OAAO,CAACG,IAAR,CAAa,OAAb;AAEpBhB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,KAAK,GAAGT,OAAO,CAACW,GAAR,CAAY,OAAZ,CAAd;AACA,UAAMC,IAAI,GAAGZ,OAAO,CAACW,GAAR,CAAY,MAAZ,CAAb;;AACA,QAAIF,KAAK,IAAIG,IAAb,EAAmB;AACjBJ,MAAAA,QAAQ,CAACV,WAAW,CAAC;AAAEW,QAAAA,KAAF;AAASG,QAAAA;AAAT,OAAD,CAAZ,CAAR;AACAL,MAAAA,OAAO,CAACG,IAAR,CAAa,OAAb;AACD;AACF,GAPQ,EAON,EAPM,CAAT;AASA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACwB,cAAD,EAAiBC,gBAAjB,IAAqCzB,QAAQ,CAAC,KAAD,CAAnD;AACA,QAAM,CAAC0B,cAAD,EAAiBC,iBAAjB,IAAsC3B,QAAQ,CAAC,EAAD,CAApD;;AAEA,QAAM4B,cAAc,GAAIC,KAAD,IAAW;AAChCR,IAAAA,WAAW,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAIH,KAAD,IAAW;AAChCN,IAAAA,WAAW,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD,GAFD;;AAIA,QAAME,KAAK,GAAG,MAAM;AAClBzB,IAAAA,QAAQ,CAACyB,KAAT,CAAe;AAAEb,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,KAAf,EAAuCY,IAAvC,CAA6CC,QAAD,IAAc;AACxD,UAAIA,QAAJ,EAAc;AACZC,QAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCN,KAApC,GAA4C,EAA5C;AACAK,QAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCN,KAApC,GAA4C,EAA5C;;AACA,YAAII,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AAC3Bb,UAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAlB,UAAAA,OAAO,CAACgC,GAAR,CAAY,OAAZ,EAAqBC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACO,IAAT,CAAc1B,KAA7B,CAArB,EAA0D;AACxD2B,YAAAA,OAAO,EAAE;AAD+C,WAA1D;AAGApC,UAAAA,OAAO,CAACgC,GAAR,CAAY,QAAZ,EAAsBC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACO,IAAT,CAAcvB,IAAd,CAAmByB,GAAlC,CAAtB,EAA8D;AAC5DD,YAAAA,OAAO,EAAE;AADmD,WAA9D;AAGApC,UAAAA,OAAO,CAACgC,GAAR,CAAY,UAAZ,EAAwBC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACO,IAAT,CAAcvB,IAAd,CAAmBC,QAAlC,CAAxB,EAAqE;AACnEuB,YAAAA,OAAO,EAAE;AAD0D,WAArE;AAGA5B,UAAAA,QAAQ,CACNV,WAAW,CAAC;AACVwC,YAAAA,MAAM,EAAEV,QAAQ,CAACO,IAAT,CAAcvB,IAAd,CAAmByB,GADjB;AAEVxB,YAAAA,QAAQ,EAAEe,QAAQ,CAACO,IAAT,CAAcvB,IAAd,CAAmBC,QAFnB;AAGVJ,YAAAA,KAAK,EAAEmB,QAAQ,CAACO,IAAT,CAAc1B;AAHX,WAAD,CADL,CAAR;AAOAF,UAAAA,OAAO,CAACG,IAAR,CAAa,OAAb;AACD,SAnBD,MAmBO;AACLQ,UAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,UAAAA,iBAAiB,CAACQ,QAAQ,CAACO,IAAT,CAAcI,GAAf,CAAjB;AACD;AACF;AACF,KA5BD;AA6BD,GA9BD;;AAgCA,sBACE;AAAA,2BACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,UAFL;AAGE,UAAA,WAAW,EAAC,UAHd;AAIE,UAAA,QAAQ,EAAElB,cAJZ;AAKE,UAAA,KAAK,EAAER,QALT;AAME,UAAA,SAAS,EAAC;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF,eAWE;AAAA;AAAA;AAAA;AAAA,gBAXF,eAaE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,EAAE,EAAC,UAFL;AAGE,UAAA,WAAW,EAAC,UAHd;AAIE,UAAA,QAAQ,EAAEY,cAJZ;AAKE,UAAA,KAAK,EAAEV,QALT;AAME,UAAA,SAAS,EAAC;AANZ;AAAA;AAAA;AAAA;AAAA,gBAbF,eAsBE;AAAA;AAAA;AAAA;AAAA,gBAtBF,eAwBE;AAAQ,UAAA,SAAS,EAAC,WAAlB;AAA8B,UAAA,OAAO,EAAE,MAAMW,KAAK,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBF,eA2BE;AAAA;AAAA;AAAA;AAAA,gBA3BF,eA4BE;AAAA;AAAA;AAAA;AAAA,gBA5BF,eA6BE;AACE,UAAA,SAAS,EAAC,WADZ;AAEE,UAAA,OAAO,EAAE,MAAMnB,OAAO,CAACG,IAAR,CAAa,UAAb,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BF,EAmCGO,cAAc,gBACb;AAAG,UAAA,SAAS,EAAC,iBAAb;AAAA,oBAAgCE;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADa,gBAGb,QAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA,gBAtCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+CD,CA5GD;;GAAMjB,K;UACaP,W,EACDE,U,EACCD,W;;;KAHbM,K;AA8GN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { loginAction } from \"../ReduxStore/Actions\";\nimport apis from \"../APICalls\";\nimport Cookies from \"js-cookie\";\n\nconst authApis = apis.authApis();\n\nconst Login = (props) => {\n  const authInfo = useSelector((state) => state.auth);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  if (authInfo.token) history.push(\"/home\");\n\n  useEffect(() => {\n    const token = Cookies.get(\"token\");\n    const user = Cookies.get(\"user\");\n    if (token && user) {\n      dispatch(loginAction({ token, user }));\n      history.push(\"/home\");\n    }\n  }, []);\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLogginFailed, setIsLoginFailed] = useState(false);\n  const [failureMessage, setFailureMessage] = useState(\"\");\n\n  const changeUserName = (event) => {\n    setUsername(event.target.value);\n  };\n\n  const changePassword = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const login = () => {\n    authApis.login({ username, password }).then((response) => {\n      if (response) {\n        document.getElementById(\"username\").value = \"\";\n        document.getElementById(\"password\").value = \"\";\n        if (response.status === 200) {\n          setIsLoginFailed(false);\n          Cookies.set(\"token\", JSON.stringify(response.data.token), {\n            expires: 1,\n          });\n          Cookies.set(\"userId\", JSON.stringify(response.data.user._id), {\n            expires: 1,\n          });\n          Cookies.set(\"username\", JSON.stringify(response.data.user.username), {\n            expires: 1,\n          });\n          dispatch(\n            loginAction({\n              userId: response.data.user._id,\n              username: response.data.user.username,\n              token: response.data.token,\n            })\n          );\n          history.push(\"/home\");\n        } else {\n          setIsLoginFailed(true);\n          setFailureMessage(response.data.err);\n        }\n      }\n    });\n  };\n\n  return (\n    <div>\n      <center>\n        <div className=\"login-card\">\n          <div className=\"login-brand\">Elates Grocer</div>\n          <input\n            type=\"text\"\n            id=\"username\"\n            placeholder=\"username\"\n            onChange={changeUserName}\n            value={username}\n            className=\"inpt login-usename-inpt\"\n          />\n\n          <br />\n\n          <input\n            type=\"password\"\n            id=\"password\"\n            placeholder=\"password\"\n            onChange={changePassword}\n            value={password}\n            className=\"password\"\n          />\n\n          <br />\n\n          <button className=\"login-btn\" onClick={() => login()}>\n            login\n          </button>\n          <br />\n          <br />\n          <button\n            className=\"login-btn\"\n            onClick={() => history.push(\"/android\")}\n          >\n            Go To Downloader Page\n          </button>\n          {isLogginFailed ? (\n            <p className=\"failure-message\">{failureMessage}</p>\n          ) : (\n            <React.Fragment />\n          )}\n        </div>\n      </center>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}